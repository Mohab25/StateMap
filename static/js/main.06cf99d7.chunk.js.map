{"version":3,"sources":["Components/Sidebar/InnerContainer/Widgets/Tiles/TilesPickers/images/Dark.jpg","Components/Sidebar/InnerContainer/Widgets/Tiles/TilesPickers/images/Light.jpg","Components/Sidebar/InnerContainer/Widgets/Tiles/TilesPickers/images/Topo.jpg","Components/Map/styles/style.js","Components/Sidebar/Sidebar/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersColorPickers/LayerContentColor/styles/styles.js","Actions/ActionsCreators/LayerColorChange.js","Actions/types.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersColorPickers/LayerContentColor/index.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersColorPickers/LayersOutlineColor/styles/styles.js","Actions/ActionsCreators/LayerOutlineColorChange.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersColorPickers/LayersOutlineColor/index.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersLabels/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersLabels/index.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersBodyHolder/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersBodyHolder/index.js","Components/Sidebar/InnerContainer/Widgets/Tiles/TilesBodyHolder/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Tiles/TilesPickers/TilesPicker/styles/styles.js","Actions/ActionsCreators/TileChange/ChangeTile.js","Components/Sidebar/InnerContainer/Widgets/Tiles/TilesPickers/TilesPicker/index.js","Components/Sidebar/InnerContainer/Widgets/Tiles/TilesBodyHolder/index.js","Components/Sidebar/InnerContainer/Widgets/Color_Schemes/LayersColorPickers/LayerContentColor/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Color_Schemes/LayersColorPickers/LayersOutlineColor/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Color_Schemes/LayersLabels/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Color_Schemes/LayersBodyHolder/styles/styles.js","Components/Sidebar/InnerContainer/index.js","Components/Sidebar/SideIcon/styles/styles.js","Components/Sidebar/SideIcon/index.js","Components/Sidebar/Sidebar/index.js","Components/Togglers/TogglersContainer/styles/styles.js","Components/Togglers/DataToggler/styles/styles.js","Components/Togglers/DataToggler/index.js","Actions/ActionsCreators/ToggleActions/ToggleDataView.js","Components/Togglers/MapToggler/styles/styles.js","Components/Togglers/MapToggler/index.js","Actions/ActionsCreators/ToggleActions/ToggleMapView.js","Components/Togglers/SearchBar/styles/styles.js","Components/Togglers/SearchBar/index.js","Actions/ActionsCreators/Selection/searchTableItem.js","Actions/ActionsCreators/Selection/SearchClick.js","Components/Togglers/TogglersContainer/index.js","Actions/ActionsCreators/LayerColorChangeForClassComponent.js","Reducers/LayerColorsReducer.js","Reducers/TogglersReducer.js","Reducers/TileReducer.js","Reducers/SearchReducer.js","Reducers/index.js","Components/Map/MapComponents/Geojson/index.js","Components/DataView/Table/index.js","Components/Map/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MapContainer","styled","div","LeafMapContainer","Sidebar","props","Sideposition","SidebarTitle","h6","SidebarSubtitle","p","SidebarSubtitleHr","hr","SidebarSettings","SidebarInnerColorPickerContainer","SidebarInnerColorPickerText","SidebarInnerColorPickerDiv","color","ColorPalette","ColorPickedContainer","ColorPicked","colorChanger","type","payload","Index","useState","Renderer","setRenderer","colorSet2","fillColor","useSelector","state","LayerColors","dispatch","useDispatch","colorPalette","onClick","map","index","key","SidebarInnerColorOutlinePickerContainer","SidebarInnerOulineColorPickerText","SidebarInnerOutlineColorPickerDiv","outline","OutlinecolorChanger","colorSet1","OutlineColor","SidebarInnerLabelContainer","SidebarInnerLabelText","LayerBodyHolder","height","overFlow","LayerNameHolder","LayerName","LayerToggleIcon","bodyHeight","setHeight","overflow","setOverflow","TilesBodyHolder","TilesNameHolder","TilesName","TilesToggleIcon","SidebarTilesPickerContainer","SidebarTilesPickerText","SidebarTilesPickerDiv","background","changeTile","Tileprovider","returner","img1","img2","img3","content","Theme","ChangeTile","SidebarIcon","click","SidebarPosition","SetSidebarPosition","useEffect","console","log","LeafTogglersContainer","MapDataHolder","LeafDataToggler","view","ToggleView","View","switchData","LeafMapToggler","SearchContainer","LeafSearchBar","input","Matchcard","cardmatches","setMatches","textInput","useRef","showSearchResult","matches","card","match","Name","matchedItem","current","value","changer","properties","PAU_NAME","className","style","fontFamily","ref","onChange","e","Data","features","filter","block","regex","RegExp","target","placeholder","placeholderTextColor","State","Tile","MatchedItem","combineReducers","action","SearchReducer","PolyFillColor","GeojsonKey","onEach","bind","styler","getColorScheme","this","prevProps","setState","feature","layer","popupContent","parseInt","Census","ES2","bindPopup","colorPallete","pop","GeoJSON","data","json_data","onEachFeature","Component","connect","Features","name","tabular","width","position","top","AU_NAME","textAlign","fontSize","isNaN","ES1","marginTop","lat","long","zoom","tile","Flying_match","GeojsononEach","matched","mapInstance","leafletElement","Object","keys","length","geometry","coordinates","Fly1","Fly2","flyTo","L","Icon","Default","imagePath","freeBus","Map","center","TileLayer","url","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","document","title","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.06cf99d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Dark.baa0fbd3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Light.11e2b478.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Topo.beed083d.jpg\";","import styled from 'styled-components';\r\n\r\nexport const MapContainer = styled.div`\r\n    width:100%; \r\n    height:100vh;\r\n    padding:0px;   \r\n    background-color:green;   \r\n    overflow:hidden;\r\n`\r\nexport const LeafMapContainer = styled.div`\r\n    width:75%; \r\n    height:100%; \r\n    float:left; \r\n    background-color:yellow; \r\n    padding:0px; \r\n\r\n    @media(max-width:1000px){\r\n        width:100%; \r\n    }\r\n`","import styled from 'styled-components';\r\n\r\nexport const Sidebar = styled.div`\r\n    width:25%; \r\n    min-height:100%;\r\n    float:left; \r\n    background-color:#3f3f3f; \r\n    display:flex; \r\n    flex-direction:column; \r\n    justify-content:space-between;\r\n    align-items:center; \r\n    align-content:space-around;\r\n    top:0px; \r\n    bottom:0px; \r\n    left:0px; \r\n    transition:1.5s ;\r\n    transition-timing-function: ease-out;\r\n\r\n    @media (max-width:1000px){\r\n        overflow:hidden; \r\n        width:50%; \r\n        position:absolute; \r\n        left:${props=>props.Sideposition}px;\r\n        z-index:12000; \r\n    }\r\n\r\n`\r\n\r\nexport const SidebarTitle = styled.h6`\r\n    margin-top:20px; \r\n    color:white; \r\n\r\n`\r\n\r\nexport const SidebarSubtitle = styled.p`\r\n    color:white; \r\n    align-self:flex-start; \r\n    margin-top:100px; \r\n    margin-left:20px; \r\n    \r\n`\r\n\r\nexport const SidebarSubtitleHr = styled.hr`\r\n    border-top:1px solid white;  \r\n    width:100%; \r\n`\r\n\r\nexport const SidebarSettings = styled.div`\r\n    width:80%;\r\n    background-color:teal; \r\n    color:white; \r\n    padding:10px;\r\n    text-align:center; \r\n`","import styled from 'styled-components'\r\nexport const SidebarInnerColorPickerContainer=styled.div`\r\n    width:100%; \r\n    height:25%; \r\n \r\n`\r\n\r\nexport const SidebarInnerColorPickerText=styled.p`\r\n    color:white;\r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n`\r\n\r\nexport const SidebarInnerColorPickerDiv=styled.div`\r\n    width:50px; \r\n    height:30px; \r\n    background-color:${props=>props.color}; \r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n    cursor:pointer; \r\n`\r\n\r\nexport const ColorPalette=styled.div`\r\n    width:320px;\r\n    height:250px;\r\n    position:absolute; \r\n    top:0px; \r\n    left:0px; \r\n    background-color:#3f3f3f;\r\n    display:flex; \r\n    flex-direction:column;    \r\n`\r\n\r\nexport const ColorPickedContainer=styled.div`\r\n    width:100%; \r\n    height:100px;\r\n    display:flex; \r\n    flex-direction:row;\r\n    justify-content:space-evenly;      \r\n    align-items:center; \r\n`\r\n\r\nexport const ColorPicked = styled.div`\r\n    width:60px;\r\n    height:60px; \r\n    background-color:${props=>props.color}; \r\n    cursor:pointer; \r\n    color:white; \r\n`","import { FillColorChange } from \"../types\";\n\nexport const colorChanger=(color)=>{\n    let newColor = {type:FillColorChange,payload:color}; \n    return newColor; \n}\n","export const FillColorChange = 'FillColorChange';\nexport const OutlineColorChange = 'OutlineColorChange';\nexport const ToggleMapView = 'ToggleMapView'; \nexport const ToggleDataView = 'ToggleDataView'; \nexport const ChangeTile = 'ChangeTile'\nexport const GEOJsonClicked = 'GEOJSONCLICKED'\nexport const SearchItemClicked = 'SEARCHITEMCLICKED'\nexport const SearchTableItem = 'SEARCHTABLEITEM'\n","import React,{Fragment,useState,useEffect} from 'react'\r\nimport {SidebarInnerColorPickerContainer,SidebarInnerColorPickerText,\r\n    SidebarInnerColorPickerDiv,ColorPalette,ColorPickedContainer,ColorPicked} \r\nfrom './styles/styles'\r\nimport {useSelector,useDispatch} from 'react-redux' \r\nimport {FillColorChange} from '../../../../../../../Actions/types.js'\r\nimport {colorChanger} from '../../../../../../../Actions/ActionsCreators/LayerColorChange'\r\n\r\n\r\nexport default function Index() {\r\n    const [Renderer,setRenderer] = useState(''); \r\n    //const [colorSet1,SetColors1] = useState(['white','black','grey']); \r\n    const [colorSet2,SetColors2] = useState(['green','blue','red']);\r\n    const fillColor = useSelector(state=>state.LayerColors.fillColor); \r\n    const dispatch = useDispatch();\r\n\r\n    let colorPalette=()=>{\r\n        if(Renderer===''){\r\n        setRenderer('Color Palete');\r\n        }\r\n        else{\r\n            setRenderer('')\r\n        }\r\n    }\r\n\r\n    if(Renderer===''){\r\n        return (\r\n            <Fragment>\r\n                <SidebarInnerColorPickerContainer>\r\n                    <SidebarInnerColorPickerText>color</SidebarInnerColorPickerText>\r\n                    <SidebarInnerColorPickerDiv color={fillColor} onClick={colorPalette}></SidebarInnerColorPickerDiv>\r\n                </SidebarInnerColorPickerContainer>\r\n            </Fragment>\r\n        )\r\n    }\r\n    else {\r\n        return(\r\n            <Fragment>\r\n                <ColorPalette onClick={colorPalette}>\r\n                {/*<ColorPickedContainer>\r\n                    {colorSet1.map((color,index)=><ColorPicked key={index} color={color} onClick={()=>dispatch(colorChanger(color))}/>)}\r\n                </ColorPickedContainer>*/}\r\n                <ColorPickedContainer>\r\n                    {colorSet2.map((color,index)=><ColorPicked key={index} color={color} onClick={()=>dispatch(colorChanger(color))}/>)}\r\n                </ColorPickedContainer>\r\n                </ColorPalette>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const SidebarInnerColorOutlinePickerContainer=styled.div`\r\n    width:100%; \r\n    height:25%; \r\n\r\n`\r\n\r\nexport const SidebarInnerOulineColorPickerText=styled.p`\r\n    color:white;\r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n`\r\n\r\nexport const SidebarInnerOutlineColorPickerDiv=styled.div`\r\nwidth:50px; \r\nheight:30px; \r\nbackground-color:${props=>props.color}; \r\nalign-self:flex-start; \r\nmargin-left:20px; \r\nborder:4px solid ${props=>props.outline}; \r\n`\r\n","import { OutlineColorChange } from \"../types\";\n\nexport const OutlinecolorChanger=(color)=>{\n    let newColor = {type:OutlineColorChange,payload:color}; \n    return newColor; \n}\n","import React,{Fragment,useState} from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux' \r\nimport {SidebarInnerColorOutlinePickerContainer,SidebarInnerOulineColorPickerText,\r\nSidebarInnerOutlineColorPickerDiv} from './styles/styles'\r\nimport {ColorPalette,ColorPickedContainer,ColorPicked} from '../LayerContentColor/styles/styles'\r\nimport {OutlinecolorChanger} from '../../../../../../../Actions/ActionsCreators/LayerOutlineColorChange'\r\nimport { OutlineColorChange } from '../../../../../../../Actions/types'\r\n\r\n\r\nexport default function Index() {\r\n    const [Renderer,setRenderer] = useState(''); \r\n    const [colorSet1,SetColors1] = useState(['white','black','grey']); \r\n    const [colorSet2,SetColors2] = useState(['green','blue','red']);\r\n    const OutlineColor = useSelector(state=>state.LayerColors.OutlineColor);\r\n    const fillColor =  useSelector(state=>state.LayerColors.fillColor);\r\n    const dispatch = useDispatch();\r\n\r\n    let colorPalette=()=>{\r\n        if(Renderer===''){\r\n        setRenderer('Color Palete');\r\n        }\r\n        else{\r\n            setRenderer('')\r\n        }\r\n    }\r\n\r\n\r\n    if(Renderer===''){\r\n\r\n    return (\r\n        <Fragment>\r\n        <SidebarInnerColorOutlinePickerContainer>    \r\n            <SidebarInnerOulineColorPickerText>Outline color</SidebarInnerOulineColorPickerText>\r\n            <SidebarInnerOutlineColorPickerDiv onClick={colorPalette} outline={OutlineColor} color={fillColor}></SidebarInnerOutlineColorPickerDiv>\r\n        </SidebarInnerColorOutlinePickerContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nelse {\r\n    return(\r\n        <Fragment>\r\n            <ColorPalette onClick={colorPalette}>\r\n            <ColorPickedContainer>\r\n                {colorSet1.map((color,index)=><ColorPicked key={index} color={color} onClick={()=>dispatch(OutlinecolorChanger(color))}/>)}\r\n            </ColorPickedContainer>\r\n            <ColorPickedContainer>\r\n                {colorSet2.map((color,index)=><ColorPicked key={index} color={color} onClick={()=>dispatch(OutlinecolorChanger(color))}/>)}\r\n            </ColorPickedContainer>\r\n            <ColorPickedContainer><ColorPicked color={'grey'} onClick={()=>dispatch(OutlinecolorChanger('none'))}>None</ColorPicked></ColorPickedContainer>\r\n            </ColorPalette>\r\n        </Fragment>\r\n    )\r\n}\r\n}","import styled from 'styled-components'\r\n\r\nexport const SidebarInnerLabelContainer=styled.div`\r\n    width:100%; \r\n    height:25%; \r\n`\r\n\r\nexport const SidebarInnerLabelText = styled.p`\r\ncolor:white;\r\nalign-self:flex-start; \r\nmargin-left:20px; \r\n`","import React,{Fragment} from 'react'\r\nimport {SidebarInnerLabelContainer,SidebarInnerLabelText} from './styles/styles'\r\n\r\nexport default function index() {\r\n    return (\r\n        <Fragment>\r\n            <SidebarInnerLabelContainer>\r\n                <SidebarInnerLabelText>Label</SidebarInnerLabelText>\r\n            </SidebarInnerLabelContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const LayerBodyHolder = styled.div`\r\n    width:90%; \r\n    height:${props=>props.height}px; \r\n    background-color:#2f2f2f; \r\n    margin-left:-2%;\r\n    display:flex; \r\n    flex-direction:column; \r\n    justify-content:space-between; \r\n    align-items:flex-start; \r\n    align-content:space-evenly; \r\n    overflow:${props=>props.overFlow};\r\n    transition:1s; \r\n`\r\n\r\nexport const LayerNameHolder = styled.div`\r\n    width:100%; \r\n    background-color:#1f1f1f; \r\n    padding:10px; \r\n    display:flex;  \r\n    flex-direction:row; \r\n    justify-content:space-between; \r\n    cursor:pointer; \r\n`\r\n\r\nexport const LayerName = styled.p`\r\n    color:white;\r\n`\r\n\r\nexport const LayerToggleIcon =styled.p`     \r\n    color:white;\r\n`","import React,{Fragment,useState} from 'react'\r\nimport ContentColorPicker from '../LayersColorPickers/LayerContentColor/index'\r\nimport OutlineColorPicker from '../LayersColorPickers/LayersOutlineColor/index'\r\nimport Label from '../LayersLabels/index'\r\nimport {LayerBodyHolder,LayerNameHolder,LayerName,LayerToggleIcon} from './styles/styles'\r\n\r\nexport default function Index() {\r\n    let [bodyHeight,setHeight]=useState('50'); \r\n    let [overflow,setOverflow] = useState('hidden');\r\n\r\n    let toggleHeightAndOverflow=()=>{\r\n        if(bodyHeight==='380'){\r\n            setHeight('50');\r\n            setOverflow('hidden');\r\n        }\r\n        else if(bodyHeight==='50'){\r\n            setHeight('380')\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    return (\r\n        <Fragment>\r\n            <LayerBodyHolder height={bodyHeight} overFlow={overflow}>\r\n                <LayerNameHolder onClick={toggleHeightAndOverflow}>\r\n                    <LayerName>Color Scheme</LayerName>\r\n                    <LayerToggleIcon>^</LayerToggleIcon>\r\n                </LayerNameHolder>\r\n                <ContentColorPicker/>\r\n                <OutlineColorPicker/>\r\n                <Label/>\r\n            </LayerBodyHolder>\r\n        </Fragment>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const TilesBodyHolder = styled.div`\r\n    width:90%; \r\n    height:${props=>props.height}px; \r\n    background-color:#2f2f2f; \r\n    margin-left:-2%;\r\n    display:flex; \r\n    flex-direction:column; \r\n    justify-content:flex-start ; \r\n    align-items:flex-start; \r\n    align-content:space-evenly; \r\n    overflow:${props=>props.overFlow};\r\n    transition:1s; \r\n`\r\n\r\nexport const TilesNameHolder = styled.div`\r\n    width:100%; \r\n    background-color:#1f1f1f; \r\n    padding:10px; \r\n    display:flex;  \r\n    flex-direction:row; \r\n    justify-content:space-between; \r\n    cursor:pointer; \r\n`\r\n\r\nexport const TilesName = styled.p`\r\n    color:white;\r\n`\r\n\r\nexport const TilesToggleIcon =styled.p`     \r\n    color:white;\r\n`","import styled from 'styled-components'\r\nexport const SidebarTilesPickerContainer=styled.div`\r\n    width:100%; \r\n    height:300px; \r\n    overflow-y:scroll\r\n`\r\n\r\nexport const SidebarTilesPickerText=styled.p`\r\n    color:white;\r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n`\r\n\r\nexport const SidebarTilesPickerDiv=styled.div`\r\n    width:85%; \r\n    height:150px;\r\n    margin:auto;  \r\n    background:url(${props=>props.background}); \r\n    align-self:flex-start; \r\n    cursor:pointer; \r\n`","import {ChangeTile} from '../../types';\n\nexport const changeTile=(Tileprovider)=>{\n    return {\n        type:ChangeTile,\n        payload:Tileprovider\n    }\n}","import React,{Fragment} from 'react'\r\nimport {SidebarTilesPickerContainer,SidebarTilesPickerText,SidebarTilesPickerDiv} \r\nfrom './styles/styles'\r\nimport {useDispatch} from 'react-redux'\r\nimport { changeTile } from \"../../../../../../../Actions/ActionsCreators/TileChange/ChangeTile\";\r\nimport { colorChanger } from \"../../../../../../../Actions/ActionsCreators/LayerColorChange\";\r\nimport img1 from '../images/Dark.jpg'\r\nimport img2 from '../images/Light.jpg'\r\nimport img3 from '../images/Topo.jpg'\r\n\r\n\r\nexport default function Index() {\r\n    let dispatch = useDispatch()\r\n    let ChangeTile=(Theme)=>{\r\n        switch(Theme){\r\n            case 'Dark Theme':dispatch(changeTile('https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png'));dispatch(colorChanger('blue'));break; \r\n            case 'Light Theme':dispatch(changeTile('https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png'));dispatch(colorChanger('red'));break; \r\n            case 'Topo Theme': dispatch(changeTile('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png'));dispatch(colorChanger('red'));break;\r\n        }\r\n    }\r\n    \r\n    const imgs = [[img1,'Dark Theme'],[img2,'Light Theme'],[img3,'Topo Theme']]\r\n    const returner = imgs.map(content=>\r\n        <Fragment>\r\n        <SidebarTilesPickerText>{content[1]}</SidebarTilesPickerText>\r\n        <SidebarTilesPickerDiv onClick={()=>ChangeTile(content[1])} background={content[0]}></SidebarTilesPickerDiv>\r\n        </Fragment>\r\n        )\r\n    return (\r\n        <Fragment>\r\n            <SidebarTilesPickerContainer>\r\n                {returner}\r\n            </SidebarTilesPickerContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React,{Fragment,useState} from 'react'\r\nimport {TilesBodyHolder,TilesNameHolder,TilesName,TilesToggleIcon} from './styles/styles'\r\nimport TilePicker from '../TilesPickers/TilesPicker'\r\nexport default function Index() {\r\n    let [bodyHeight,setHeight]=useState('50'); \r\n    let [overflow,setOverflow] = useState('hidden');\r\n\r\n    let toggleHeightAndOverflow=()=>{\r\n        if(bodyHeight==='380'){\r\n            setHeight('50');\r\n            setOverflow('hidden');\r\n        }\r\n        else if(bodyHeight==='50'){\r\n            setHeight('380')\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    return (\r\n        <Fragment>\r\n            <TilesBodyHolder height={bodyHeight} overFlow={overflow}>\r\n                <TilesNameHolder onClick={toggleHeightAndOverflow}>\r\n                    <TilesName>Tiles</TilesName>\r\n                    <TilesToggleIcon>^</TilesToggleIcon>\r\n                </TilesNameHolder>\r\n                <TilePicker/>\r\n            </TilesBodyHolder>\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\nexport const SidebarInnerColorPickerContainer=styled.div`\r\n    width:100%; \r\n    height:25%; \r\n \r\n`\r\n\r\nexport const SidebarInnerColorPickerText=styled.p`\r\n    color:white;\r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n`\r\n\r\nexport const SidebarInnerColorPickerDiv=styled.div`\r\n    width:50px; \r\n    height:30px; \r\n    background-color:red; \r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n`","import styled from 'styled-components'\r\n\r\nexport const SidebarInnerColorOutlinePickerContainer=styled.div`\r\n    width:100%; \r\n    height:25%; \r\n\r\n`\r\n\r\nexport const SidebarInnerOulineColorPickerText=styled.p`\r\n    color:white;\r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n`\r\n\r\nexport const SidebarInnerOutlineColorPickerDiv=styled.div`\r\nwidth:50px; \r\nheight:30px; \r\nbackground-color:green; \r\nalign-self:flex-start; \r\nmargin-left:20px; \r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const SidebarInnerLabelContainer=styled.div`\r\n    width:100%; \r\n    height:25%; \r\n`\r\n\r\nexport const SidebarInnerLabelText = styled.p`\r\ncolor:white;\r\nalign-self:flex-start; \r\nmargin-left:20px; \r\n`","import styled from 'styled-components'\r\n\r\nexport const LayerBodyHolder = styled.div`\r\n    width:90%; \r\n    height:${props=>props.height}px; \r\n    background-color:#2f2f2f; \r\n    margin-left:-2%;\r\n    display:flex; \r\n    flex-direction:column; \r\n    justify-content:space-between; \r\n    align-items:flex-start; \r\n    align-content:space-evenly; \r\n    overflow:${props=>props.overFlow};\r\n    transition:1s; \r\n`\r\n\r\nexport const LayerNameHolder = styled.div`\r\n    width:100%; \r\n    background-color:#1f1f1f; \r\n    padding:10px; \r\n    display:flex;  \r\n    flex-direction:row; \r\n    justify-content:space-between; \r\n    cursor:pointer; \r\n`\r\n\r\nexport const LayerName = styled.p`\r\n    color:white;\r\n`\r\n\r\nexport const LayerToggleIcon =styled.p`     \r\n    color:white;\r\n`","import React,{Fragment} from 'react'\r\nimport {innerContainer} from './styles/styles'\r\nimport LayerBody from './Widgets/Layers/LayersBodyHolder/index'\r\nimport Tiles from './Widgets/Tiles/TilesBodyHolder/index'\r\nimport Schemes from './Widgets/Color_Schemes/LayersBodyHolder/index'\r\n\r\n\r\nexport default function index() {\r\n    return (\r\n        <Fragment>\r\n                <LayerBody/>\r\n                <Tiles/>\r\n                {/*<Schemes/>*/}\r\n        </Fragment>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const SidebarIcon = styled.div`\r\n    width:30px;\r\n    height:35px;\r\n    background:url(img/layers.png) no-repeat;\r\n    position:absolute; \r\n    top:0px; \r\n    left:0px; \r\n    display:none; \r\n    cursor:pointer;\r\n    @media(max-width:1000px){\r\n        display:block;\r\n        position:absolute;  \r\n        top:75px;\r\n        left:10px;\r\n        z-index:13000;\r\n    }\r\n`","import React,{Fragment} from 'react'\r\nimport {SidebarIcon} from './styles/styles'\r\nexport default function index(props) {\r\n    return (\r\n        <Fragment>\r\n            <SidebarIcon onClick={props.click}/>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React,{useState,useEffect,Fragment} from 'react'\r\nimport {Sidebar,SidebarTitle,SidebarSubtitle,SidebarSubtitleHr,SidebarInnerContainer,SidebarSettings} from './styles/styles'\r\nimport InnerDiv from '../InnerContainer/index'\r\nimport SidebarIcon from '../SideIcon/index'\r\n\r\nexport default function Index() {\r\n    let [SidebarPosition,SetSidebarPosition] = useState('-500');\r\n\r\n    const toggelSidebar=()=>{\r\n            if (SidebarPosition === '-500'){\r\n                console.log(\"Sidebar Position:\",SidebarPosition)\r\n                SetSidebarPosition('0')\r\n            }\r\n            else if(SidebarPosition==='0'){\r\n                console.log(\"Sidebar Position:\",SidebarPosition)\r\n                SetSidebarPosition('-500')\r\n            }\r\n\r\n        }\r\n\r\n        useEffect(()=>{\r\n            \r\n        }); \r\n\r\n    return (\r\n        <Fragment>\r\n            <Sidebar Sideposition={SidebarPosition}>\r\n            <SidebarTitle>Mohab Jam</SidebarTitle>\r\n            <SidebarSubtitle>Layer Settings</SidebarSubtitle>\r\n            <SidebarSubtitleHr></SidebarSubtitleHr>\r\n            <InnerDiv></InnerDiv>\r\n            <SidebarSettings>Settings</SidebarSettings>\r\n            </Sidebar>\r\n            <SidebarIcon click={toggelSidebar}/>\r\n        </Fragment>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const LeafTogglersContainer= styled.div`\r\n    padding:5px 15px; \r\n    position:fixed; \r\n    top:30px; \r\n    right:60px; \r\n    z-index:10000;\r\n    display:flex; \r\n    flex-direction:row; \r\n    justify-content:flex-start; \r\n    align-items:center; \r\n\r\n    @media (min-width: 200px) {\r\n        width:100px;\r\n        right:15px; \r\n        flex-direction: column;\r\n        justify-content:flex-end;\r\n        align-items:center; \r\n        margin-top:-20px; \r\n      }\r\n    \r\n`\r\n\r\nexport const MapDataHolder = styled.div`\r\n    position:absolute; \r\n    top:5px; \r\n    right:0px; \r\n    display:flex; \r\n    flex-direction:row; \r\n    margin-left:50px; \r\n\r\n    @media (min-width: 200px) {\r\n        flex-direction: column;\r\n        justify-content:flex-end;\r\n        align-items:start; \r\n      }\r\n`","import styled from 'styled-components'\r\n\r\nexport const LeafDataToggler= styled.div`\r\n    margin-top:10px; \r\n    padding:5px 15px; \r\n    background-color:white; \r\n    z-index:10000;\r\n    color:white;\r\n    background-color:teal; \r\n    cursor:pointer\r\n`","import React,{Fragment} from 'react'\r\nimport {LeafDataToggler} from './styles/styles'\r\nimport {useSelector,useDispatch} from 'react-redux' \r\nimport {toggleDataView} from '../../../Actions/ActionsCreators/ToggleActions/ToggleDataView'\r\n\r\nexport default function Index() {\r\n\r\n    let view = useSelector(state=>state.ToggleView.View); \r\n    let dispatch = useDispatch(); \r\n\r\n    let switchData=(view)=>{\r\n        // change redux state. \r\n        dispatch(toggleDataView())\r\n        console.log(view)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <LeafDataToggler onClick={()=>switchData(view)}>Data</LeafDataToggler>\r\n        </Fragment>\r\n    )\r\n}\r\n","import {ToggleDataView} from '../../types';\n\nexport const toggleDataView=()=>{\n    return {\n        type:ToggleDataView,\n        payload:'Data'\n    }\n}","import styled from 'styled-components'\r\n\r\nexport const LeafMapToggler= styled.div`\r\n    padding:5px 15px; \r\n    background-color:white; \r\n    z-index:10000;\r\n    color:white;\r\n    background-color:teal; \r\n    margin-right:10px; \r\n    cursor:pointer;\r\n`","import React,{Fragment} from 'react'\r\nimport {LeafMapToggler} from './styles/styles'\r\nimport {useSelector,useDispatch} from 'react-redux' \r\nimport {toggleMapView} from '../../../Actions/ActionsCreators/ToggleActions/ToggleMapView'\r\n\r\n\r\nexport default function Index() {\r\n    \r\n    let view = useSelector(state=>state.ToggleView.View); \r\n    let dispatch = useDispatch(); \r\n\r\n    let switchData=(view)=>{\r\n        // change redux state. \r\n        dispatch(toggleMapView())\r\n        console.log(view)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <LeafMapToggler onClick={()=>switchData(view)}>Map</LeafMapToggler>\r\n        </Fragment>\r\n    )\r\n}\r\n","import {ToggleMapView} from '../../types';\n\nexport const toggleMapView=()=>{\n    return {\n        type:ToggleMapView,\n        payload:'Map'\n    }\n}","import styled from 'styled-components'\r\n\r\nexport const SearchContainer=styled.div`\r\n    width:200px; \r\n    background:transparent; \r\n    display:flex;\r\n    flex-direction:column; \r\n    @media(min-width:200px){\r\n        position:relative;\r\n        top:88px; \r\n        left:42px;\r\n    }\r\n\r\n`\r\n\r\nexport const LeafSearchBar = styled.input`\r\n    width:200px;\r\n    height:30px;\r\n    background:transparent; \r\n    outline:none; \r\n    border:1px solid teal;\r\n    color:white; \r\n    ::placeholder{\r\n        color:white;\r\n    } \r\n    @media(min-width:200px){\r\n        width:100px; \r\n    }\r\n`\r\n\r\nexport const Matchcard = styled.div`\r\n    width:100%;\r\n    height:50px;  \r\n    position:relative;\r\n    right:78px; \r\n    top:8px; \r\n    overflow:hidden;\r\n    font-size:12px; \r\n    cursor:pointer; \r\n`","import React,{Fragment,useState,useEffect} from 'react'\r\nimport {SearchContainer,LeafSearchBar,Matchcard} from './styles/styles'\r\nimport Data from '../../../Components/Map/Selected_Areas.geojsonl.json'\r\nimport {searchItem} from \"../../../Actions/ActionsCreators/Selection/SearchClick\";\r\nimport {searchTableItem} from \"../../../Actions/ActionsCreators/Selection/searchTableItem\";\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {useRef} from 'react'\r\n\r\nexport default function Index() {\r\n    let [cardmatches,setMatches] = useState([]); \r\n    let textInput = useRef(null);\r\n\r\n    const changer=()=>{\r\n        textInput.current.value='';\r\n        let matches =[]; \r\n        showSearchResult(matches)\r\n    }\r\n    const handleChange=(e)=>{\r\n        let BlockList = Data.features; \r\n        let matches = BlockList.filter(block=>{\r\n            let regex = new RegExp(`^${e.target.value}`,'gi')\r\n            return block.properties.PAU_NAME.match(regex)\r\n        })\r\n        if (e.target.value===''){\r\n            matches=[]\r\n        }\r\n        showSearchResult(matches)\r\n    }\r\n\r\n    let showSearchResult=(matches)=>{\r\n        setMatches(matches)\r\n    }\r\n    let view = useSelector(state=>state.ToggleView.View)\r\n    let dispatch = useDispatch()\r\n    let card = cardmatches.map(match=>\r\n    <div onClick={()=>{if(view==='Map'){dispatch(searchItem(match));changer()}\r\n                           else dispatch(searchTableItem(match.properties.PAU_NAME))\r\n    }\r\n    }>\r\n        <Matchcard className='card card-body mb-1'>\r\n            <h6 className='text-primary' style={{fontFamily:'Cairo'}}>{match.properties.PAU_NAME}</h6>\r\n        </Matchcard>\r\n    </div>\r\n        )\r\n    return (\r\n\r\n        <Fragment>\r\n            <SearchContainer>\r\n            <LeafSearchBar ref={textInput} onChange={handleChange} placeholder='Search...' placeholderTextColor='green'></LeafSearchBar>\r\n            {card}\r\n            </SearchContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import {SearchTableItem} from '../../types';\nimport Data from '../../../Components/Map/Selected_Areas.geojsonl.json'\n\nexport const searchTableItem=(Name)=>{\n    console.log('Action Search Table:',Name)\n    return {\n        type:SearchTableItem,\n        payload:Name\n    }\n}\n","import {SearchItemClicked} from '../../types';\nimport Data from '../../../Components/Map/Selected_Areas.geojsonl.json'\n\nexport const searchItem=(matchedItem)=>{\n    console.log('Action:',matchedItem)\n    return {\n        type:SearchItemClicked,\n        payload:matchedItem\n    }\n}\n\n// the idea is to get the name, and according to it get the coord of the polygon and \n// then fly to it . \n","import React,{Fragment} from 'react'\r\nimport {LeafTogglersContainer,MapDataHolder} from './styles/styles'\r\nimport DataToggler from '../DataToggler/index'\r\nimport MapToggler from '../MapToggler/index'\r\nimport SearBar from '../SearchBar/index' \r\nexport default function index() {\r\n    return (\r\n        <Fragment>\r\n            <LeafTogglersContainer>\r\n                <MapDataHolder>\r\n                <MapToggler/>\r\n                <DataToggler/>\r\n                </MapDataHolder>\r\n                <SearBar/>\r\n            </LeafTogglersContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import { FillColorChange } from \"../types\";\n\nexport const colorChanger=(color)=>dispatch=>(\n    dispatch({type:FillColorChange,payload:color})\n)","import {FillColorChange,OutlineColorChange} from '../Actions/types'\n\nconst State = {fillColor:'blue',OutlineColor:'none'};\n\nexport default function LayerColorReducer(state=State,action){\n    switch(action.type){\n        case FillColorChange:return{\n            ...state,\n            fillColor:action.payload\n        }\n        case OutlineColorChange:return{\n            ...state,\n            OutlineColor:action.payload\n        }\n        default:return(state)\n    }\n}","import {ToggleMapView,ToggleDataView} from '../Actions/types'\n\nconst State = {View:'Map'};\n\nexport default function  ToggleViewReducer(state=State,action){\n    switch(action.type){\n        case ToggleMapView:return{\n            ...state, \n            View:action.payload\n        }\n        case ToggleDataView:return{\n            ...state,\n            View:action.payload\n        }\n        default:return {...state}\n    }\n}","import {ChangeTile} from '../Actions/types'\n\nconst State = {Tile:'https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png'};\n\nexport default function LayerColorReducer(state=State,action){\n    switch(action.type){\n        case ChangeTile:return{\n            ...state,\n            Tile:action.payload\n        }\n        default:return(state)\n    }\n}","import {SearchItemClicked} from '../Actions/types'\nimport {SearchTableItem} from '../Actions/types'\n\nconst State = {MatchedItem:[],Name:''};\n\nexport default function LayerColorReducer(state=State,action){\n    switch(action.type){\n        case SearchItemClicked:console.log('Search Reducer:',action.payload);return{\n            ...state,\n        MatchedItem:action.payload\n        }\n        case SearchTableItem:return{...state,Name:action.payload};\n\n        default:return(state)\n    }\n}","import {combineReducers} from 'redux';\nimport LayerColorsReducers from './LayerColorsReducer';\nimport ToggleView from \"./TogglersReducer\";\nimport TileReducer from './TileReducer'\nimport SearchReducer from './SearchReducer'\n\nexport default combineReducers({\n    LayerColors: LayerColorsReducers,\n    ToggleView:ToggleView,\n    ChangeTile:TileReducer,\n    SearchReducer:SearchReducer\n})","import React,{Component} from 'react'\nimport json_data from '../../Selected_Areas.geojsonl.json'\nimport {GeoJSON,Popup} from 'react-leaflet'\nimport {connect} from 'react-redux'\nimport {colorChanger} from '../../../../Actions/ActionsCreators/LayerColorChangeForClassComponent'\nimport  rootReducer  from \"../../../../Reducers\";\n\nclass Index extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            PolyFillColor:'grey',\n            GeojsonKey:1,\n            outline:'none',\n            view:'Map'\n        };\n\n        this.onEach= this.onEach.bind(this);\n        this.styler = this.styler.bind(this);\n        this.getColorScheme = this.getColorScheme.bind(this)\n    }\n\n    componentDidMount(){\n        console.log(this.props.view)\n    }\n\n\n    componentDidUpdate(prevProps){\n        if(this.props!=prevProps){\n        let key = this.state.GeojsonKey;\n        key++;     \n        this.setState({PolyFillColor:this.props.color,outline:this.props.outline,GeojsonKey:key});\n        this.setState({view:this.props.view});\n    }\n    }\n\n    onEach(feature,layer){\n        const popupContent = `<Popup><p>Block Name:${feature.properties.PAU_NAME}</p>\n            <p>2008 Census:${parseInt(feature.properties.Census)}</p>\n            <p>2020 Population:${parseInt(feature.properties.ES2)}</p>\n        </Popup>`\n        layer.bindPopup(popupContent)\n    }\n\n    getColorScheme(){\n        switch(this.state.PolyFillColor){\n            case 'red': return ['#FBE9E7','#FFCCBC','#FFAB91','#FF8A65','#FF7043','#FF5722','#F4511E','#E64A19','#D84315','#BF360C','red'];\n            case 'green': return ['#E8F5E9','#C8E6C9','#A5D6A7','#81C784','#66BB6A','#4CAF50','#43A047','#388E3C','#2E7D32','#1B5E20','green'];\n            case 'blue' : return ['#E1F5FE','#B3E5FC','#81D4FA','#4FC3F7','#29B6F6','#03A9F4','#039BE5','#0288D1','#0277BD','#01579B','blue'];\n            default: return ['#E1F5FE','#B3E5FC','#81D4FA','#4FC3F7','#29B6F6','#03A9F4','#039BE5','#0288D1','#0277BD','#01579B','blue'];\n            //default : return ['#ECEFF1','#CFD8DC','#B0BEC5','#90A4AE','#78909C','#607D8B','#546E7A','#455A64','#37474F','#263238'] \n        }\n    }\n\n    styler(feature){\n        let colorPallete = this.getColorScheme(); \n        let pop = parseInt(feature.properties.ES2);\n        console.log(pop)\n        if(pop<=2000){console.log(colorPallete[0]);return {color:this.state.outline,fillColor:colorPallete[0]}}\n        else if(pop>=2000&&pop<=2500){console.log(colorPallete[1]);return {color:this.state.outline,fillColor:colorPallete[1]}}\n        else if(pop>=2500&&pop<=3000){console.log(colorPallete[2]);return {color:this.state.outline,fillColor:colorPallete[2]}}\n        else if(pop>=3000&&pop<=3500){console.log(colorPallete[3]);return {color:this.state.outline,fillColor:colorPallete[3]}}\n        else if(pop>=3500&&pop<=4000){console.log(colorPallete[4]);return {color:this.state.outline,fillColor:colorPallete[4]}}\n        else if(pop>=4000&&pop<=4500){console.log(colorPallete[5]);return {color:this.state.outline,fillColor:colorPallete[5]}}\n        else if(pop>=4500&&pop<=5000){console.log(colorPallete[6]);return {color:this.state.outline,fillColor:colorPallete[6]}}\n        else if(pop>=5000&&pop<=5500){console.log(colorPallete[7]);return {color:this.state.outline,fillColor:colorPallete[7]}}\n        else if(pop>=5500&&pop<=6000){console.log(colorPallete[8]);return {color:this.state.outline,fillColor:colorPallete[8]}}\n        else if(pop>=6000&&pop<=65000){console.log(colorPallete[9]);return {color:this.state.outline,fillColor:colorPallete[9]}}\n        \n        else{return {color:this.state.outline,fillColor:colorPallete[10]}};\n    \n    }\n\n    render(){\n        let view  = this.state.view; \n        if(view=='Map'){\n        return(\n        <GeoJSON key={this.state.GeojsonKey} data={json_data} style={this.styler} onEachFeature={this.props.onEach}/>                    \n        //<GeoJSON key={this.state.GeojsonKey} data={json_data} style={{color:this.state.outline,fillColor:this.state.PolyFillColor}} onEachFeature={this.onEach}/>                \n        )}\n        else{\n            return(\n                <div>Binga</div>\n            )\n        }\n    }\n} \n\nconst mapStateToProps=(state)=>({\n    color:state.LayerColors.fillColor,\n    outline:state.LayerColors.OutlineColor,\n    view:state.ToggleView.View\n\n})\n\nexport default connect(mapStateToProps,{colorChanger})(Index); ","import React,{Fragment} from \"react\";\nimport Data from \"../../Map/Selected_Areas.geojsonl.json\";\nimport {useSelector} from 'react-redux'\n\n\nexport default function Index(){\n    const Features = Data.features;\n    let match=[]; \n    let name=useSelector(state=>state.SearchReducer.Name);\n    if(name!=''){\n        match=Features.filter(match=>match.properties.PAU_NAME===name)\n    } \n    else{\n        match = Features; \n    }\n    const tabular = <table style={{width:'100%',position:'relative',top:'38px'}}className='table table-striped'>    \n        <thead className='thead-dark'>\n            <tr>\n                <th>Locality Name</th>\n                <th>Block Name</th>\n                <th>Census 2008 </th>\n                <th>Census Estimation 2018</th>\n                <th>Census Estimation 2020</th>\n            </tr>\n        </thead>\n        <tbody>\n            {match.map(block=>   \n            <tr>\n                <td style={{fontFamily:'Cairo'}}>{block.properties.AU_NAME}</td>\n                <td style={{fontFamily:'Cairo'}}>{block.properties.PAU_NAME}</td>\n                <td style={{textAlign:'center',fontFamily:'Open Sans',fontSize:'19px'}}>{isNaN(parseInt(block.properties.Census))?'No Data':parseInt(block.properties.Census)}</td>\n                <td style={{textAlign:'center',fontFamily:'Open Sans',fontSize:'19px'}}>{isNaN(parseInt(block.properties.ES1))?'No Data':parseInt(block.properties.ES1)}</td>\n                <td style={{textAlign:'center',fontFamily:'Open Sans',fontSize:'19px'}}>{isNaN(parseInt(block.properties.ES2))?'No Data':parseInt(block.properties.ES2)}</td>\n            </tr>)}\n        </tbody>\n    </table>\n    \n    return(\n        <div className='' style={{marginTop:'100px'}}>\n                {tabular}\n        </div>\n    )\n}","import React, { Component } from 'react'\r\nimport {Map,TileLayer,Marker,Popup,Circle,GeoJSON,Layer} from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport L from 'leaflet'\r\nimport {MapContainer,LeafMapContainer} from './styles/style'\r\nimport Sidebar from '../Sidebar/Sidebar/index'\r\nimport TogglersContainer from '../Togglers/TogglersContainer/index'\r\nimport GeoJSON_ from './MapComponents/Geojson'\r\nimport {connect} from 'react-redux'\r\nimport Tabular from '../DataView/Table/index'\r\n\r\nclass index extends Component {\r\n    constructor(props){\r\n            super(props);\r\n            this.state={\r\n                lat:15.570498544455713,\r\n                long:32.532881032138349,\r\n                zoom:15,\r\n                view:'Map',\r\n                tile:this.props.tile,\r\n                Flying_match:{}\r\n            }\r\n            this.GeojsononEach = this.GeojsononEach.bind(this);\r\n            this.matched = this.matched.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.map = this.mapInstance.leafletElement;\r\n    }\r\n \r\n    matched(MatchedItem=''){\r\n        this.setState({Flying_match:MatchedItem},()=>{this.GeojsononEach()})\r\n        \r\n    }\r\n    GeojsononEach(feature,layer){\r\n        let matched = this.state.Flying_match\r\n        let popupContent='';\r\n        console.log('flying match:',matched)\r\n        if(Object.keys(matched).length==0){\r\n        popupContent = `<Popup><p>Block Name:${feature.properties.PAU_NAME}</p>\r\n        <p>2008 Census:${parseInt(feature.properties.Census)}</p>\r\n        <p>2020 Population:${parseInt(feature.properties.ES2)}</p>\r\n        </Popup>`\r\n        layer.bindPopup(popupContent)\r\n        }\r\n        // this is a trial to solve geojson popup problem\r\n        else{ /*\r\n            const free={\r\n                type: \"FeatureCollection\",\r\n                \"name\": \"All_Selected_Areas\",\r\n                \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\r\n                \"features\": [matched]\r\n            }\r\n        \r\n            this.setState({freeBus:free})\r\n        */}\r\n\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps!=this.props){\r\n            console.log(prevProps)\r\n            this.setState({view:this.props.view,\r\n            tile:this.props.tile\r\n            })\r\n        }\r\n        if(prevProps.MatchedItem!=this.props.MatchedItem){\r\n            let [Fly1,Fly2] = this.props.MatchedItem.geometry.coordinates[0][0][0];\r\n            console.log(Fly1,Fly2)\r\n            if(this.state.view=='Map'){this.map.flyTo([Fly2,Fly1],15);\r\n            this.matched(this.props.MatchedItem)  \r\n            }\r\n            }\r\n    }\r\n\r\n\r\n    render() {\r\n        L.Icon.Default.imagePath='img/'; \r\n        const position = [this.state.lat,this.state.long];  \r\n        let view = this.state.view; \r\n        console.log('free bus',this.state.freeBus)\r\n        if(view=='Map'){\r\n        return (\r\n            <div>\r\n                <MapContainer>\r\n                    <Sidebar></Sidebar>\r\n                    <LeafMapContainer>\r\n                        <Map center={position} zoom={this.state.zoom} style={{width:'100%',height:'100%'}} ref={e => { this.mapInstance = e }}>\r\n                            <TileLayer url={this.state.tile}/>\r\n                            {/*<Marker position={position} draggable={true}>\r\n                                <Popup>Mohab Jam</Popup>\r\n                            </Marker>\r\n                            <Circle center = {position} radius={200}/>*/}\r\n                            <GeoJSON_ onEach={this.GeojsononEach}/> \r\n\r\n                        </Map>\r\n                    </LeafMapContainer>\r\n                    <TogglersContainer/>\r\n                </MapContainer>\r\n            </div>\r\n        )\r\n        }\r\n        else{\r\n            return(\r\n                <div style={{height:'100vh'}}>\r\n                    <TogglersContainer/>\r\n                    <Tabular></Tabular>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>({\r\n    view:state.ToggleView.View,\r\n    tile:state.ChangeTile.Tile,\r\n    MatchedItem:state.SearchReducer.MatchedItem\r\n})\r\n\r\nconst ExtendedMarker = props => {\r\n\r\n    const openPopup = marker => {\r\n      if (marker) marker.leafletElement.openPopup();\r\n    };\r\n  \r\n    return (\r\n      <GeoJSON ref={el => openPopup(el)} {...props}/>\r\n    );\r\n  };\r\n\r\n\r\nexport default connect(mapStateToProps)(index); ","import {createStore,applyMiddleware} from 'redux';\r\nimport rootReducer from './Reducers';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer,initialState,composeWithDevTools(applyMiddleware(...middleware))); \r\nexport default store; \r\n","import React ,{Component}from 'react';\nimport './App.css';\nimport Map from './Components/Map/index'\nimport store from './store'\nimport {Provider} from 'react-redux'\nimport './bootstrap.min.css'\nclass App extends Component {\n  componentWillMount(){\n    document.title = \"Khartoum state vulnerability map\"\n  }\n  render(){\n    return(\n      <Provider store={store}>\n      <div>\n        <Map/>\n      </div>\n      </Provider>\n    )}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>,document.getElementById(\"root\"));\nserviceWorker.register();\n"],"sourceRoot":""}