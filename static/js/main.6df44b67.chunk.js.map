{"version":3,"sources":["Components/Sidebar/InnerContainer/Widgets/Tiles/TilesPickers/images/Dark.jpg","Components/Sidebar/InnerContainer/Widgets/Tiles/TilesPickers/images/Light.jpg","Components/Sidebar/InnerContainer/Widgets/Tiles/TilesPickers/images/Topo.jpg","Components/Map/styles/style.js","Components/Sidebar/Sidebar/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersColorPickers/LayerContentColor/styles/styles.js","Actions/ActionsCreators/LayerColorChange.js","Actions/types.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersColorPickers/LayerContentColor/index.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersColorPickers/LayersOutlineColor/styles/styles.js","Actions/ActionsCreators/LayerOutlineColorChange.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersColorPickers/LayersOutlineColor/index.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersLabels/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersLabels/index.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersBodyHolder/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersBodyHolder/index.js","Components/Sidebar/InnerContainer/Widgets/Tiles/TilesBodyHolder/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Tiles/TilesPickers/TilesPicker/styles/styles.js","Actions/ActionsCreators/TileChange/ChangeTile.js","Components/Sidebar/InnerContainer/Widgets/Tiles/TilesPickers/TilesPicker/index.js","Components/Sidebar/InnerContainer/Widgets/Tiles/TilesBodyHolder/index.js","Components/Sidebar/InnerContainer/Widgets/Color_Schemes/LayersColorPickers/LayerContentColor/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Color_Schemes/LayersColorPickers/LayersOutlineColor/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Color_Schemes/LayersLabels/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Color_Schemes/LayersBodyHolder/styles/styles.js","Components/Sidebar/InnerContainer/index.js","Components/Sidebar/SideIcon/styles/styles.js","Components/Sidebar/SideIcon/index.js","Actions/ActionsCreators/ColsestFacilityComputer/RemoveJson.js","Components/Sidebar/Sidebar/index.js","Components/Togglers/TogglersContainer/styles/styles.js","Components/Togglers/DataToggler/styles/styles.js","Components/Togglers/DataToggler/index.js","Actions/ActionsCreators/ToggleActions/ToggleDataView.js","Components/Togglers/MapToggler/styles/styles.js","Components/Togglers/MapToggler/index.js","Actions/ActionsCreators/ToggleActions/ToggleMapView.js","Components/Togglers/SearchBar/styles/styles.js","Components/Togglers/SearchBar/index.js","Actions/ActionsCreators/Selection/searchTableItem.js","Actions/ActionsCreators/Selection/SearchClick.js","Components/Togglers/TogglersContainer/index.js","Components/Map/MapComponents/Geojson/index.js","Actions/ActionsCreators/LayerColorChangeForClassComponent.js","Components/DataView/Table/index.js","Actions/ActionsCreators/ColsestFacilityComputer/changeCoords.js","Components/Map/index.js","Reducers/LayerColorsReducer.js","Reducers/TogglersReducer.js","Reducers/TileReducer.js","Reducers/SearchReducer.js","Reducers/ClosestHealthCare.js","Reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MapContainer","styled","div","LeafMapContainer","Sidebar","props","Sideposition","SidebarTitle","h6","SidebarSubtitle","p","SidebarSettings","SidebarInnerColorPickerContainer","SidebarInnerColorPickerText","SidebarInnerColorPickerDiv","color","ColorPalette","ColorPickedContainer","ColorPicked","colorChanger","type","payload","Index","useState","Renderer","setRenderer","colorSet2","fillColor","useSelector","state","LayerColors","dispatch","useDispatch","colorPalette","onClick","map","index","key","SidebarInnerColorOutlinePickerContainer","SidebarInnerOulineColorPickerText","SidebarInnerOutlineColorPickerDiv","outline","OutlinecolorChanger","colorSet1","OutlineColor","SidebarInnerLabelContainer","SidebarInnerLabelText","CheckToggler","input","LayerBodyHolder","height","overFlow","LayerNameHolder","LayerName","LayerToggleIcon","bodyHeight","setHeight","overflow","setOverflow","Icon","setIcon","className","TilesBodyHolder","TilesNameHolder","TilesName","TilesToggleIcon","SidebarTilesPickerContainer","SidebarTilesPickerText","SidebarTilesPickerDiv","background","changeTile","Tileprovider","returner","img1","img2","img3","content","Theme","ChangeTile","SidebarIcon","click","removeJson","switcher","SidebarPosition","SetSidebarPosition","jsonState","ClosetHealthCareRemoveJson","useEffect","e","LeafTogglersContainer","MapDataHolder","LeafDataToggler","view","ToggleView","View","console","log","switchData","LeafMapToggler","SearchContainer","LeafSearchBar","Matchcard","cardmatches","setMatches","textInput","useRef","showSearchResult","matches","card","match","Name","matchedItem","current","value","changer","properties","PAU_NAME","style","fontFamily","ref","onChange","Data","features","filter","block","regex","RegExp","target","placeholder","placeholderTextColor","PolyFillColor","GeojsonKey","json_ob","onEach","bind","styler","getColorScheme","fetch","then","res","json","data","setState","this","name","prevProps","feature","layer","popupContent","pau_name","parseInt","census","es2","bindPopup","colorPallete","pop","Object","keys","length","GeoJSON","onEachFeature","Component","connect","data_list","setData","tabular","setTabular","setMatch","a","fun","SearchReducer","filtered_match","width","position","top","au_name","textAlign","fontSize","isNaN","es1","marginTop","lat","long","zoom","tile","Flying_match","clicklatlng","shortest_line","shortest_line_json_key","GeojsononEach","matched","handleClick","mapInstance","leafletElement","MatchedItem","Census","ES2","on","geometry","coordinates","Fly1","Fly2","flyTo","changeCoords","latlng","method","mode","headers","body","JSON","stringify","getMapCoords","coords","L","Default","imagePath","Blocks","jsonSwitcher","Map","center","onclick","TileLayer","url","Tile","ClosestFacilityReducer","coordsOb","State","action","combineReducers","RemoveJson","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","document","title","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6df44b67.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Dark.baa0fbd3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Light.11e2b478.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Topo.beed083d.jpg\";","import styled from 'styled-components/macro';\r\n\r\nexport const MapContainer = styled.div`\r\n    width:100%;     /* the map container  holds both the map and sidebar */ \r\n    height:100vh;\r\n    padding:0px;      \r\n    overflow:hidden;\r\n    display:flex; \r\n`\r\nexport const LeafMapContainer = styled.div`\r\n    flex-basis:75%;      /* this is the actual leaflet map*/ \r\n    height:100%; \r\n    padding:0px; \r\n\r\n    @media(max-width:1000px){\r\n        flex-basis:100%; \r\n    }\r\n`","import styled from 'styled-components/macro';\r\n\r\nexport const Sidebar = styled.div`\r\n    flex-basis:25%; \r\n    height:100%;\r\n    background-color:#3f3f3f; \r\n    display:flex; \r\n    flex-direction:column; \r\n    align-items:center; \r\n    justify-content:flex-start; \r\n    top:0px; \r\n    left:0px; \r\n    transition:1.5s ;\r\n    transition-timing-function: ease-out;\r\n\r\n    @media (max-width:1000px){\r\n        overflow:hidden; \r\n        width:30%; \r\n        position:absolute; \r\n        left:${props=>props.Sideposition}px;  /*this is for toggling*/ \r\n        z-index:1001; /* the z-index of zoom signs is 1000 */\r\n    }\r\n\r\n`\r\n\r\nexport const SidebarTitle = styled.h6`\r\n    margin-top:20px; \r\n    color:white; \r\n\r\n`\r\n\r\nexport const SidebarSubtitle = styled.p`\r\n    width:100%;     \r\n    color:white; \r\n    padding-left:20px;\r\n    padding-bottom:20px; \r\n    align-self:flex-start; \r\n    border-bottom:1px solid white; \r\n`\r\n\r\nexport const SidebarSettings = styled.div`\r\n    margin-top:5px; \r\n    width:80%;\r\n    color:white; \r\n    padding:10px;\r\n    text-align:center; \r\n`","import styled from 'styled-components/macro'\r\nexport const SidebarInnerColorPickerContainer=styled.div`\r\n    width:100%; \r\n    height:25%; \r\n    display:flex; \r\n\r\n`\r\n\r\nexport const SidebarInnerColorPickerText=styled.p`\r\n    color:white;\r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n    position:relative; \r\n    top:10%; \r\n`\r\n\r\nexport const SidebarInnerColorPickerDiv=styled.div`\r\n    width:37px; \r\n    height:37px; \r\n    background-color:${props=>props.color}; \r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n    cursor:pointer; \r\n`\r\n\r\nexport const ColorPalette=styled.div`\r\n    width:320px;\r\n    height:250px;\r\n    position:absolute; \r\n    top:0px; \r\n    left:0px; \r\n    background-color:#3f3f3f;\r\n    display:flex; \r\n    flex-direction:column;    \r\n`\r\n\r\nexport const ColorPickedContainer=styled.div`\r\n    width:100%; \r\n    height:100px;\r\n    display:flex; \r\n    flex-direction:row;\r\n    justify-content:space-evenly;      \r\n    align-items:center; \r\n`\r\n\r\nexport const ColorPicked = styled.div`\r\n    width:60px;\r\n    height:60px; \r\n    background-color:${props=>props.color}; \r\n    cursor:pointer; \r\n    color:white; \r\n`","import { FillColorChange } from \"../types\";\n\nexport const colorChanger=(color)=>{\n    let newColor = {type:FillColorChange,payload:color}; \n    return newColor; \n}\n","export const FillColorChange = 'FillColorChange';\nexport const OutlineColorChange = 'OutlineColorChange';\nexport const ToggleMapView = 'ToggleMapView'; \nexport const ToggleDataView = 'ToggleDataView'; \nexport const ChangeTile = 'ChangeTile'\nexport const GEOJsonClicked = 'GEOJSONCLICKED'\nexport const SearchItemClicked = 'SEARCHITEMCLICKED'\nexport const SearchTableItem = 'SEARCHTABLEITEM'\nexport const ClosestFacilityComputer = 'ClosestFacilityComputer'\nexport const ClosestFacilityComputerRemoveJson = 'ClosestFacilityComputerRemoveJson'\n","import React,{Fragment,useState,useEffect} from 'react'\r\nimport {SidebarInnerColorPickerContainer,SidebarInnerColorPickerText,\r\n    SidebarInnerColorPickerDiv,ColorPalette,ColorPickedContainer,ColorPicked} \r\nfrom './styles/styles'\r\nimport {useSelector,useDispatch} from 'react-redux' \r\nimport {FillColorChange} from '../../../../../../../Actions/types.js'\r\nimport {colorChanger} from '../../../../../../../Actions/ActionsCreators/LayerColorChange'\r\n\r\n\r\nexport default function Index() {\r\n    const [Renderer,setRenderer] = useState(''); \r\n    //const [colorSet1,SetColors1] = useState(['white','black','grey']); \r\n    const [colorSet2,SetColors2] = useState(['green','blue','red']);\r\n    const fillColor = useSelector(state=>state.LayerColors.fillColor); \r\n    const dispatch = useDispatch();\r\n\r\n    let colorPalette=()=>{\r\n        if(Renderer===''){\r\n        setRenderer('Color Palete');\r\n        }\r\n        else{\r\n            setRenderer('')\r\n        }\r\n    }\r\n\r\n    if(Renderer===''){\r\n        return (\r\n            <Fragment>\r\n                <SidebarInnerColorPickerContainer>\r\n                    <SidebarInnerColorPickerText>color</SidebarInnerColorPickerText>\r\n                    <SidebarInnerColorPickerDiv color={fillColor} onClick={colorPalette}></SidebarInnerColorPickerDiv>\r\n                </SidebarInnerColorPickerContainer>\r\n            </Fragment>\r\n        )\r\n    }\r\n    else {\r\n        return(\r\n            <Fragment>\r\n                <ColorPalette onClick={colorPalette}>\r\n                {/*<ColorPickedContainer>\r\n                    {colorSet1.map((color,index)=><ColorPicked key={index} color={color} onClick={()=>dispatch(colorChanger(color))}/>)}\r\n                </ColorPickedContainer>*/}\r\n                    <ColorPickedContainer>\r\n                        {colorSet2.map((color,index)=><ColorPicked key={index} color={color} onClick={()=>dispatch(colorChanger(color))}/>)}\r\n                    </ColorPickedContainer>\r\n                </ColorPalette>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import styled from 'styled-components/macro'\r\n\r\nexport const SidebarInnerColorOutlinePickerContainer=styled.div`\r\n    width:100%; \r\n    height:25%; \r\n    display:flex; \r\n`\r\n\r\nexport const SidebarInnerOulineColorPickerText=styled.p`\r\n    color:white;\r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n    position:relative; \r\n    top:10%; \r\n`\r\n\r\nexport const SidebarInnerOutlineColorPickerDiv=styled.div`\r\nwidth:37px; \r\nheight:37px; \r\nbackground-color:white; \r\nalign-self:flex-start; \r\nmargin-left:20px; \r\nborder:4px solid ${props=>props.outline}; \r\n`","import { OutlineColorChange } from \"../types\";\n\nexport const OutlinecolorChanger=(color)=>{\n    let newColor = {type:OutlineColorChange,payload:color}; \n    return newColor; \n}\n","import React,{Fragment,useState} from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux' \r\nimport {SidebarInnerColorOutlinePickerContainer,SidebarInnerOulineColorPickerText,\r\nSidebarInnerOutlineColorPickerDiv} from './styles/styles'\r\nimport {ColorPalette,ColorPickedContainer,ColorPicked} from '../LayerContentColor/styles/styles'\r\nimport {OutlinecolorChanger} from '../../../../../../../Actions/ActionsCreators/LayerOutlineColorChange'\r\nimport { OutlineColorChange } from '../../../../../../../Actions/types'\r\n\r\n\r\nexport default function Index() {\r\n    const [Renderer,setRenderer] = useState(''); \r\n    const [colorSet1,SetColors1] = useState(['white','black','grey']); \r\n    const [colorSet2,SetColors2] = useState(['green','blue','red']);\r\n    const OutlineColor = useSelector(state=>state.LayerColors.OutlineColor);\r\n    const fillColor =  useSelector(state=>state.LayerColors.fillColor);\r\n    const dispatch = useDispatch();\r\n\r\n    let colorPalette=()=>{\r\n        if(Renderer===''){\r\n        setRenderer('Color Palete');\r\n        }\r\n        else{\r\n            setRenderer('')\r\n        }\r\n    }\r\n\r\n\r\n    if(Renderer===''){\r\n\r\n    return (\r\n        <Fragment>\r\n        <SidebarInnerColorOutlinePickerContainer>    \r\n            <SidebarInnerOulineColorPickerText>Outline color</SidebarInnerOulineColorPickerText>\r\n            <SidebarInnerOutlineColorPickerDiv onClick={colorPalette} outline={OutlineColor} color={fillColor}></SidebarInnerOutlineColorPickerDiv>\r\n        </SidebarInnerColorOutlinePickerContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nelse {\r\n    return(\r\n        <Fragment>\r\n            <ColorPalette onClick={colorPalette}>\r\n                <ColorPickedContainer>\r\n                    {colorSet1.map((color,index)=><ColorPicked key={index} color={color} onClick={()=>dispatch(OutlinecolorChanger(color))}/>)}\r\n                </ColorPickedContainer>\r\n                <ColorPickedContainer>\r\n                    {colorSet2.map((color,index)=><ColorPicked key={index} color={color} onClick={()=>dispatch(OutlinecolorChanger(color))}/>)}\r\n                </ColorPickedContainer>\r\n                <ColorPickedContainer><ColorPicked color={'grey'} onClick={()=>dispatch(OutlinecolorChanger('none'))}>None</ColorPicked></ColorPickedContainer>\r\n            </ColorPalette>\r\n        </Fragment>\r\n    )\r\n}\r\n}","import styled from 'styled-components/macro'\r\n\r\nexport const SidebarInnerLabelContainer=styled.div`\r\n    width:100%; \r\n    height:25%; \r\n    display:flex; \r\n`\r\n\r\nexport const SidebarInnerLabelText = styled.p`\r\ncolor:white;\r\nalign-self:flex-start; \r\nmargin-left:20px; \r\n`\r\n\r\nexport const CheckToggler = styled.input`\r\n    width:40px; \r\n    height:20px; \r\n    margin-left:15px; \r\n    background-color:#1f1f1f; \r\n    position:relative; \r\n    -webkit-appearance:none; \r\n    outline:none; \r\n    border-radius:20px; \r\n    transition:0.5s; \r\n    &:before{\r\n        width:20px;              /* this is an element created as the first child*/ \r\n        height:20px;\r\n        content:''; \r\n        position:absolute; \r\n        top:0px; \r\n        left:0px; \r\n        background-color:#fff; \r\n        border-radius:20px; \r\n        transition:0.5s;  \r\n        cursor:pointer;   \r\n    }\r\n    &:checked{\r\n        background-color:#000080; \r\n        &:before{\r\n        left:20px;  /* moving the element 20px left */\r\n    }\r\n}\r\n\r\n    \r\n`","import React,{Fragment} from 'react'\r\nimport {SidebarInnerLabelContainer,SidebarInnerLabelText, CheckToggler} from './styles/styles'\r\n\r\nexport default function index() {\r\n    return (\r\n        <Fragment>\r\n            <SidebarInnerLabelContainer>\r\n                <SidebarInnerLabelText>Label</SidebarInnerLabelText>\r\n                <CheckToggler type='checkbox'></CheckToggler>\r\n            </SidebarInnerLabelContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import styled from 'styled-components/macro'\r\n\r\nexport const LayerBodyHolder = styled.div`\r\n    width:90%; \r\n    height:${props=>props.height}px; \r\n    background-color:#2f2f2f; \r\n    margin-left:-2%;\r\n    display:flex; \r\n    flex-direction:column; \r\n    justify-content:space-between; \r\n    align-items:flex-start; \r\n    align-content:space-evenly; \r\n    overflow:${props=>props.overFlow};\r\n    transition:1s; \r\n`\r\n\r\nexport const LayerNameHolder = styled.div`\r\n    width:100%; \r\n    background-color:#1f1f1f; \r\n    padding:10px; \r\n    display:flex;  \r\n    flex-direction:row; \r\n    justify-content:space-between; \r\n    cursor:pointer; \r\n`\r\n\r\nexport const LayerName = styled.p`\r\n    color:white;\r\n`\r\n\r\nexport const LayerToggleIcon =styled.p`     \r\n    color:white;\r\n`","import React,{Fragment,useState} from 'react'\r\nimport ContentColorPicker from '../LayersColorPickers/LayerContentColor/index'\r\nimport OutlineColorPicker from '../LayersColorPickers/LayersOutlineColor/index'\r\nimport Label from '../LayersLabels/index'\r\nimport {LayerBodyHolder,LayerNameHolder,LayerName,LayerToggleIcon} from './styles/styles'\r\n\r\nexport default function Index() {\r\n    let [bodyHeight,setHeight]=useState('50'); \r\n    let [overflow,setOverflow] = useState('hidden');\r\n    let [Icon,setIcon] = useState('icon-plus')\r\n    let toggleHeightAndOverflow=()=>{\r\n        /**\r\n         * set the height of the settings container and toggle plus-minus icon. \r\n         */\r\n        if(bodyHeight==='380'){\r\n            // if the height is 380, minimize it and toggle the icon className. \r\n            setHeight('50');\r\n            setOverflow('hidden');\r\n            setIcon('icon-plus')\r\n        }\r\n        else if(bodyHeight==='50'){\r\n            // if the height is 50, maximize it and toggle the icon className. \r\n            setHeight('380')\r\n            setIcon('icon-check-minus')\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    return (\r\n        <Fragment>\r\n            <LayerBodyHolder height={bodyHeight} overFlow={overflow}>\r\n                <LayerNameHolder onClick={toggleHeightAndOverflow}>\r\n                    <LayerName>Color Scheme</LayerName>\r\n                    <LayerToggleIcon className={Icon}></LayerToggleIcon>\r\n                </LayerNameHolder>\r\n                <ContentColorPicker/>\r\n                <OutlineColorPicker/>\r\n                <Label/>\r\n            </LayerBodyHolder>\r\n        </Fragment>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const TilesBodyHolder = styled.div`\r\n    width:90%; \r\n    height:${props=>props.height}px; /* this is because of toggling the height*/\r\n    background-color:#2f2f2f; \r\n    margin-left:-2%;\r\n    display:flex; \r\n    flex-direction:column; \r\n    justify-content:flex-start ; \r\n    align-items:flex-start; \r\n    align-content:space-evenly; \r\n    overflow:${props=>props.overFlow}; /* also this is for toggling*/\r\n    transition:1s; \r\n`\r\n\r\nexport const TilesNameHolder = styled.div`\r\n    width:100%; \r\n    background-color:#1f1f1f; \r\n    padding:10px; \r\n    display:flex;  \r\n    justify-content:space-between; \r\n    cursor:pointer; \r\n`\r\n\r\nexport const TilesName = styled.p`\r\n    color:white;\r\n`\r\n\r\nexport const TilesToggleIcon =styled.p`     \r\n    color:white;\r\n`","import styled from 'styled-components'\r\nexport const SidebarTilesPickerContainer=styled.div`\r\n    width:100%; \r\n    height:300px; \r\n    overflow-y:scroll\r\n`\r\n\r\nexport const SidebarTilesPickerText=styled.p`\r\n    color:white;\r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n`\r\n\r\nexport const SidebarTilesPickerDiv=styled.div`\r\n    width:85%; \r\n    height:150px;\r\n    margin:auto;  \r\n    background:url(${props=>props.background}); \r\n    align-self:flex-start; \r\n    cursor:pointer; \r\n`","import {ChangeTile} from '../../types';\n\nexport const changeTile=(Tileprovider)=>{\n    return {\n        type:ChangeTile,\n        payload:Tileprovider\n    }\n}","import React,{Fragment} from 'react'\r\nimport {SidebarTilesPickerContainer,SidebarTilesPickerText,SidebarTilesPickerDiv} \r\nfrom './styles/styles'\r\nimport {useDispatch} from 'react-redux'\r\nimport { changeTile } from \"../../../../../../../Actions/ActionsCreators/TileChange/ChangeTile\";\r\nimport { colorChanger } from \"../../../../../../../Actions/ActionsCreators/LayerColorChange\";\r\nimport img1 from '../images/Dark.jpg'\r\nimport img2 from '../images/Light.jpg'\r\nimport img3 from '../images/Topo.jpg'\r\n\r\n\r\nexport default function Index() {\r\n    let dispatch = useDispatch()\r\n    let ChangeTile=(Theme)=>{\r\n        switch(Theme){\r\n            case 'Dark Theme':dispatch(changeTile('https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png'));dispatch(colorChanger('blue'));break; \r\n            case 'Light Theme':dispatch(changeTile('https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png'));dispatch(colorChanger('red'));break; \r\n            case 'Topo Theme': dispatch(changeTile('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png'));dispatch(colorChanger('red'));break;\r\n        }\r\n    }\r\n    \r\n    const imgs = [[img1,'Dark Theme'],[img2,'Light Theme'],[img3,'Topo Theme']]\r\n    const returner = imgs.map((content,index)=>\r\n        <Fragment key={index}>\r\n        <SidebarTilesPickerText>{content[1]}</SidebarTilesPickerText>\r\n        <SidebarTilesPickerDiv onClick={()=>ChangeTile(content[1])} background={content[0]}></SidebarTilesPickerDiv>\r\n        </Fragment>\r\n        )\r\n    return (\r\n        <Fragment>\r\n            <SidebarTilesPickerContainer>\r\n                {returner}\r\n            </SidebarTilesPickerContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React,{Fragment,useState} from 'react'\r\nimport '../../../../../../assets/font-awesome/css/font-awesome.css'\r\nimport {TilesBodyHolder,TilesNameHolder,TilesName,TilesToggleIcon} from './styles/styles'\r\nimport TilePicker from '../TilesPickers/TilesPicker'\r\n\r\n\r\nexport default function Index() {\r\n    let [bodyHeight,setHeight]=useState('50'); \r\n    let [overflow,setOverflow] = useState('hidden');\r\n    let [Icon,setIcon] = useState('icon-plus')\r\n    let toggleHeightAndOverflow=()=>{\r\n        if(bodyHeight==='380'){\r\n            setHeight('50');\r\n            setOverflow('hidden');\r\n            setIcon('icon-plus')\r\n        }\r\n        else if(bodyHeight==='50'){\r\n            setHeight('380')\r\n            setIcon('icon-check-minus')\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    return (\r\n        <Fragment>\r\n            <TilesBodyHolder height={bodyHeight} overFlow={overflow}>\r\n                <TilesNameHolder onClick={toggleHeightAndOverflow}>\r\n                    <TilesName>Tiles</TilesName>\r\n                    <TilesToggleIcon><i className={Icon}></i></TilesToggleIcon>\r\n                </TilesNameHolder>\r\n                <TilePicker/>\r\n            </TilesBodyHolder>\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n","import styled from 'styled-components/macro'\r\nexport const SidebarInnerColorPickerContainer=styled.div`\r\n    width:100%; \r\n    height:25%; \r\n \r\n`\r\n\r\nexport const SidebarInnerColorPickerText=styled.p`\r\n    color:white;\r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n`\r\n\r\nexport const SidebarInnerColorPickerDiv=styled.div`\r\n    width:50px; \r\n    height:30px; \r\n    background-color:red; \r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n`","import styled from 'styled-components'\r\n\r\nexport const SidebarInnerColorOutlinePickerContainer=styled.div`\r\n    width:100%; \r\n    height:25%; \r\n\r\n`\r\n\r\nexport const SidebarInnerOulineColorPickerText=styled.p`\r\n    color:white;\r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n`\r\n\r\nexport const SidebarInnerOutlineColorPickerDiv=styled.div`\r\nwidth:50px; \r\nheight:30px; \r\nbackground-color:green; \r\nalign-self:flex-start; \r\nmargin-left:20px; \r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const SidebarInnerLabelContainer=styled.div`\r\n    width:100%; \r\n    height:25%; \r\n`\r\n\r\nexport const SidebarInnerLabelText = styled.p`\r\ncolor:white;\r\nalign-self:flex-start; \r\nmargin-left:20px; \r\n`","import styled from 'styled-components/macro'\r\n\r\nexport const LayerBodyHolder = styled.div`\r\n    width:90%; \r\n    height:${props=>props.height}px; \r\n    background-color:#2f2f2f; \r\n    margin-left:-2%;\r\n    display:flex; \r\n    flex-direction:column; \r\n    justify-content:space-between; \r\n    align-items:flex-start; \r\n    align-content:space-evenly; \r\n    overflow:${props=>props.overFlow};\r\n    transition:1s; \r\n`\r\n\r\nexport const LayerNameHolder = styled.div`\r\n    width:100%; \r\n    background-color:#1f1f1f; \r\n    padding:10px; \r\n    display:flex;  \r\n    flex-direction:row; \r\n    justify-content:space-between; \r\n    cursor:pointer; \r\n`\r\n\r\nexport const LayerName = styled.p`\r\n    color:white;\r\n`\r\n\r\nexport const LayerToggleIcon =styled.p`     \r\n    color:white;\r\n`","import React,{Fragment} from 'react'\r\nimport {innerContainer} from './styles/styles'\r\nimport LayerBody from './Widgets/Layers/LayersBodyHolder/index'\r\nimport Tiles from './Widgets/Tiles/TilesBodyHolder/index'\r\nimport Schemes from './Widgets/Color_Schemes/LayersBodyHolder/index'\r\n\r\n\r\nexport default function index() {\r\n    return (\r\n        <Fragment>\r\n                <LayerBody/>\r\n                <Tiles/>\r\n                {/*<Schemes/>*/}\r\n        </Fragment>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const SidebarIcon = styled.div`\r\n    width:30px;\r\n    height:35px;\r\n    background:url(img/layers.png) no-repeat;\r\n    position:absolute; \r\n    top:0px; \r\n    left:0px; \r\n    display:none; \r\n    cursor:pointer;\r\n    @media(max-width:1000px){\r\n        display:block;\r\n        position:absolute;  \r\n        top:75px;\r\n        left:10px;\r\n        z-index:13000;\r\n    }\r\n`","import React,{Fragment} from 'react'\r\nimport {SidebarIcon} from './styles/styles'\r\nexport default function index(props) {\r\n    return (\r\n        <Fragment>\r\n            <SidebarIcon onClick={props.click}/>\r\n        </Fragment>\r\n    )\r\n}\r\n","import {ClosestFacilityComputerRemoveJson} from '../../types';\n\nexport const removeJson=(switcher)=>{\n    return {\n        type:ClosestFacilityComputerRemoveJson,\n        payload:switcher\n    }\n}\n","import React,{useState,useEffect,Fragment} from 'react'\r\nimport {Sidebar,SidebarTitle,SidebarSubtitle,SidebarInnerContainer,SidebarSettings} from './styles/styles'\r\nimport InnerDiv from '../InnerContainer/index'\r\nimport SidebarIcon from '../SideIcon/index'\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport {removeJson} from '../../../Actions/ActionsCreators/ColsestFacilityComputer/RemoveJson'\r\n\r\n\r\n// look, you have to change the color and button text according latlng array length \r\n\r\n\r\nexport default function Index() {\r\n    let [SidebarPosition,SetSidebarPosition] = useState('-500');\r\n\r\n    const toggelSidebar=()=>{\r\n            if (SidebarPosition === '-500'){\r\n                SetSidebarPosition('0')\r\n            }\r\n            else if(SidebarPosition==='0'){\r\n                SetSidebarPosition('-500')\r\n            }\r\n\r\n        }\r\n\r\n        let jsonState = useSelector(state=>state.ClosetHealthCareRemoveJson)\r\n        let dispatch = useDispatch()\r\n        const compute=(e)=>{\r\n        /* here i need a state, according to it the geojson should be removed and \r\n         the text and color of the button should change. \r\n        after the user clicks on the map and re-click button, the state sould reflect \r\n        this, and the compute functionality should change so it brings data from the \r\n        database. \r\n        if the user re-click on the map, it should remove the lastest state and \r\n        add a new one reflecting the coords. \r\n        . \r\n\r\n         */\r\n        let jsonstate = jsonState; \r\n        if(jsonstate.switcher==='off'){ // this controls the geojson switching \r\n            dispatch(removeJson('on'))\r\n        }\r\n        else{\r\n            dispatch(removeJson('off'))\r\n        }\r\n\r\n    }\r\n\r\n        useEffect(()=>{\r\n            dispatch(removeJson('on'))   // when the component mounts for the first time uses let the geojson appears \r\n        },[]); \r\n\r\n    return (\r\n        <Fragment>\r\n            <Sidebar Sideposition={SidebarPosition}>\r\n            <SidebarTitle>Mohab Jam</SidebarTitle>\r\n            <SidebarSubtitle>Layer Settings</SidebarSubtitle>\r\n            <InnerDiv></InnerDiv>\r\n            <SidebarSettings className='btn btn-warning' onClick={compute}>Closet Healthcare </SidebarSettings>\r\n            </Sidebar>\r\n            <SidebarIcon click={toggelSidebar}/>\r\n        </Fragment>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const LeafTogglersContainer= styled.div`\r\n    padding:5px 15px; \r\n    position:fixed; \r\n    top:30px; \r\n    right:60px; \r\n    z-index:10000;\r\n    display:flex; \r\n    flex-direction:row; \r\n    justify-content:flex-start; \r\n    align-items:center; \r\n\r\n    @media (min-width: 200px) {\r\n        width:100px;\r\n        right:15px; \r\n        flex-direction: column;\r\n        justify-content:flex-end;\r\n        align-items:center; \r\n        margin-top:-20px; \r\n      }\r\n    \r\n`\r\n\r\nexport const MapDataHolder = styled.div`\r\n    position:absolute; \r\n    top:5px; \r\n    right:0px; \r\n    display:flex; \r\n    flex-direction:row; \r\n    margin-left:50px; \r\n\r\n    @media (min-width: 200px) {\r\n        flex-direction: column;\r\n        justify-content:flex-end;\r\n        align-items:start; \r\n      }\r\n`","import styled from 'styled-components'\r\n\r\nexport const LeafDataToggler= styled.div`\r\n    margin-top:10px; \r\n    padding:5px 15px; \r\n    background-color:white; \r\n    z-index:10000;\r\n    color:white;\r\n    background-color:teal; \r\n    cursor:pointer\r\n`","import React,{Fragment} from 'react'\r\nimport {LeafDataToggler} from './styles/styles'\r\nimport {useSelector,useDispatch} from 'react-redux' \r\nimport {toggleDataView} from '../../../Actions/ActionsCreators/ToggleActions/ToggleDataView'\r\n\r\nexport default function Index() {\r\n\r\n    let view = useSelector(state=>state.ToggleView.View); \r\n    let dispatch = useDispatch(); \r\n\r\n    let switchData=(view)=>{\r\n        // change redux state. \r\n        dispatch(toggleDataView())\r\n        console.log(view)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <LeafDataToggler onClick={()=>switchData(view)}>Data</LeafDataToggler>\r\n        </Fragment>\r\n    )\r\n}\r\n","import {ToggleDataView} from '../../types';\n\nexport const toggleDataView=()=>{\n    return {\n        type:ToggleDataView,\n        payload:'Data'\n    }\n}","import styled from 'styled-components'\r\n\r\nexport const LeafMapToggler= styled.div`\r\n    padding:5px 15px; \r\n    background-color:white; \r\n    z-index:10000;\r\n    color:white;\r\n    background-color:teal; \r\n    margin-right:10px; \r\n    cursor:pointer;\r\n`","import React,{Fragment} from 'react'\r\nimport {LeafMapToggler} from './styles/styles'\r\nimport {useSelector,useDispatch} from 'react-redux' \r\nimport {toggleMapView} from '../../../Actions/ActionsCreators/ToggleActions/ToggleMapView'\r\n\r\n\r\nexport default function Index() {\r\n    \r\n    let view = useSelector(state=>state.ToggleView.View); \r\n    let dispatch = useDispatch(); \r\n\r\n    let switchData=(view)=>{\r\n        // change redux state. \r\n        dispatch(toggleMapView())\r\n        console.log(view)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <LeafMapToggler onClick={()=>switchData(view)}>Map</LeafMapToggler>\r\n        </Fragment>\r\n    )\r\n}\r\n","import {ToggleMapView} from '../../types';\n\nexport const toggleMapView=()=>{\n    return {\n        type:ToggleMapView,\n        payload:'Map'\n    }\n}","import styled from 'styled-components'\r\n\r\nexport const SearchContainer=styled.div`\r\n    width:200px; \r\n    background:transparent; \r\n    display:flex;\r\n    flex-direction:column; \r\n    @media(min-width:200px){\r\n        position:relative;\r\n        top:88px; \r\n        left:42px;\r\n    }\r\n\r\n`\r\n\r\nexport const LeafSearchBar = styled.input`\r\n    width:200px;\r\n    height:30px;\r\n    background:transparent; \r\n    outline:none; \r\n    border:1px solid teal;\r\n    color:white; \r\n    ::placeholder{\r\n        color:white;\r\n    } \r\n    @media(min-width:200px){\r\n        width:100px; \r\n    }\r\n`\r\n\r\nexport const Matchcard = styled.div`\r\n    width:100%;\r\n    height:50px;  \r\n    position:relative;\r\n    right:78px; \r\n    top:8px; \r\n    overflow:hidden;\r\n    font-size:12px; \r\n    cursor:pointer; \r\n`","import React,{Fragment,useState,useEffect} from 'react'\r\nimport {SearchContainer,LeafSearchBar,Matchcard} from './styles/styles'\r\nimport Data from '../../../Components/Map/Selected_Areas.geojsonl.json'\r\nimport {searchItem} from \"../../../Actions/ActionsCreators/Selection/SearchClick\";\r\nimport {searchTableItem} from \"../../../Actions/ActionsCreators/Selection/searchTableItem\";\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {useRef} from 'react'\r\n\r\nexport default function Index() {\r\n    let [cardmatches,setMatches] = useState([]); \r\n    let textInput = useRef(null);\r\n\r\n    const changer=()=>{\r\n        textInput.current.value='';\r\n        let matches =[]; \r\n        showSearchResult(matches)\r\n    }\r\n    const handleChange=(e)=>{\r\n        let BlockList = Data.features; \r\n        // the actual filtering \r\n        let matches = BlockList.filter(block=>{\r\n            let regex = new RegExp(`^${e.target.value}`,'gi')\r\n            return block.properties.PAU_NAME.match(regex)\r\n        })\r\n        if (e.target.value===''){\r\n            matches=[]\r\n        }\r\n        showSearchResult(matches)\r\n    }\r\n\r\n    let showSearchResult=(matches)=>{\r\n        setMatches(matches)\r\n    }\r\n    let view = useSelector(state=>state.ToggleView.View)\r\n    let dispatch = useDispatch()\r\n    let card = cardmatches.map(match=>\r\n    <div onClick={()=>{if(view==='Map'){dispatch(searchItem(match));changer()}\r\n                           else dispatch(searchTableItem(match.properties.PAU_NAME))\r\n    }\r\n    }>\r\n        <Matchcard className='card card-body mb-1'>\r\n            <h6 className='text-primary' style={{fontFamily:'Cairo'}}>{match.properties.PAU_NAME}</h6>\r\n        </Matchcard>\r\n    </div>\r\n        )\r\n    return (\r\n\r\n        <Fragment>\r\n            <SearchContainer>\r\n            <LeafSearchBar ref={textInput} onChange={handleChange} placeholder='Search(ِArabic)...' placeholderTextColor='green'></LeafSearchBar>\r\n            {card}\r\n            </SearchContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import {SearchTableItem} from '../../types';\nimport Data from '../../../Components/Map/Selected_Areas.geojsonl.json'\n\nexport const searchTableItem=(Name)=>{\n    console.log('Action Search Table:',Name)\n    return {\n        type:SearchTableItem,\n        payload:Name\n    }\n}\n","import {SearchItemClicked} from '../../types';\n\nexport const searchItem=(matchedItem)=>{\n    console.log('Action:',matchedItem)\n    return {\n        type:SearchItemClicked,\n        payload:matchedItem\n    }\n}\n\n// the idea is to get the name, and according to it get the coord of the polygon and \n// then fly to it . \n","import React,{Fragment} from 'react'\r\nimport {LeafTogglersContainer,MapDataHolder} from './styles/styles'\r\nimport DataToggler from '../DataToggler/index'\r\nimport MapToggler from '../MapToggler/index'\r\nimport SearBar from '../SearchBar/index' \r\nexport default function index() {\r\n    return (\r\n        <Fragment>\r\n            <LeafTogglersContainer>\r\n                <MapDataHolder>\r\n                <MapToggler/>\r\n                <DataToggler/>\r\n                </MapDataHolder>\r\n                <SearBar/>\r\n            </LeafTogglersContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React,{Component,Fragment} from 'react'\n// import Geojson object and popup from leaflet component, also think about using a modal\nimport {GeoJSON,Popup} from 'react-leaflet'\nimport {connect} from 'react-redux'\n// this is an action to change geojson colors\nimport {colorChanger} from '../../../../Actions/ActionsCreators/LayerColorChangeForClassComponent'\n\nclass Index extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            PolyFillColor:'grey', // by default the color is grey. \n            GeojsonKey:1,//?\n            outline:'none', // this is the outline of the geojson object, changes according to stateprops from redux \n            view:'Map',    // the view changes dynamically. \n            json_ob:{},        // holds data coming from server \n        };\n\n        this.onEach= this.onEach.bind(this);\n        this.styler = this.styler.bind(this);\n        this.getColorScheme = this.getColorScheme.bind(this)\n    }\n\n    async componentDidMount(){\n        // fetching data from django. \n        await fetch('http://197.252.18.152:8000/state/paus/').then(res=>res.json()).then(\n            (data)=>{this.setState({json_ob:data})})\n            this.state.json_ob.name=\"State Blocks\"\n        }\n\n\n    componentDidUpdate(prevProps){\n        /**\n         * prevProps holds {color: \"\", outline: \"\", view: \"\", onEach: ƒ, colorChanger: ƒ\n         */\n        if(this.props!=prevProps){\n        let key = this.state.GeojsonKey;\n        key++;     \n        this.setState({PolyFillColor:this.props.color,outline:this.props.outline,GeojsonKey:key});\n        this.setState({view:this.props.view});\n    }\n    }\n\n    onEach(feature,layer){\n        const popupContent =\n            `<Popup><p>Block Name:${feature.properties.pau_name}</p>\n            <p>2008 Census:${parseInt(feature.properties.census)}</p>\n            <p>2020 Population:${parseInt(feature.properties.es2)}</p>\n            </Popup>`\n\n        layer.bindPopup(popupContent)\n    }\n\n    getColorScheme(){\n        switch(this.state.PolyFillColor){ // according to polyfill color a scheme will be returned \n            case 'red': return ['#FBE9E7','#FFCCBC','#FFAB91','#FF8A65','#FF7043','#FF5722','#F4511E','#E64A19','#D84315','#BF360C','red'];\n            case 'green': return ['#E8F5E9','#C8E6C9','#A5D6A7','#81C784','#66BB6A','#4CAF50','#43A047','#388E3C','#2E7D32','#1B5E20','green'];\n            case 'blue' : return ['#E1F5FE','#B3E5FC','#81D4FA','#4FC3F7','#29B6F6','#03A9F4','#039BE5','#0288D1','#0277BD','#01579B','blue'];\n            default: return ['#E1F5FE','#B3E5FC','#81D4FA','#4FC3F7','#29B6F6','#03A9F4','#039BE5','#0288D1','#0277BD','#01579B','blue'];\n            //default : return ['#ECEFF1','#CFD8DC','#B0BEC5','#90A4AE','#78909C','#607D8B','#546E7A','#455A64','#37474F','#263238'] \n        }\n    }\n\n    styler(feature){\n        let colorPallete = this.getColorScheme(); // this is a list of colors \n        let pop = parseInt(feature.properties.es2); // population estemation for 2020\n        \n        // according to population, a certain color will be returned \n        if(pop<=2000){return {color:this.state.outline,fillColor:colorPallete[0]}}\n        else if(pop>=2000&&pop<=2500){return {color:this.state.outline,fillColor:colorPallete[1]}}\n        else if(pop>=2500&&pop<=3000){return {color:this.state.outline,fillColor:colorPallete[2]}}\n        else if(pop>=3000&&pop<=3500){return {color:this.state.outline,fillColor:colorPallete[3]}}\n        else if(pop>=3500&&pop<=4000){return {color:this.state.outline,fillColor:colorPallete[4]}}\n        else if(pop>=4000&&pop<=4500){return {color:this.state.outline,fillColor:colorPallete[5]}}\n        else if(pop>=4500&&pop<=5000){return {color:this.state.outline,fillColor:colorPallete[6]}}\n        else if(pop>=5000&&pop<=5500){return {color:this.state.outline,fillColor:colorPallete[7]}}\n        else if(pop>=5500&&pop<=6000){return {color:this.state.outline,fillColor:colorPallete[8]}}\n        else if(pop>=6000&&pop<=65000){return {color:this.state.outline,fillColor:colorPallete[9]}}\n        \n        else{return {color:this.state.outline,fillColor:colorPallete[10]}};\n    \n    }\n\n    render(){\n        let view  = this.state.view; \n        if(view=='Map'){\n        if(Object.keys(this.state.json_ob).length!=0){\n        return(\n        <GeoJSON key={this.state.GeojsonKey} data={this.state.json_ob} style={this.styler} onEachFeature={this.onEach}/>                    \n        //<GeoJSON key={this.state.GeojsonKey} data={json_data} style={{color:this.state.outline,fillColor:this.state.PolyFillColor}} onEachFeature={this.onEach}/>                \n        )}\n        else{\n            return(\n            <Fragment>\n\n            </Fragment>)\n        }\n    }\n        else{\n            return(\n                <Fragment></Fragment>\n            )\n        }\n    }\n} \n\nconst mapStateToProps=(state)=>({\n    color:state.LayerColors.fillColor,\n    outline:state.LayerColors.OutlineColor,\n    view:state.ToggleView.View\n\n})\n\nexport default connect(mapStateToProps,{colorChanger})(Index); ","import { FillColorChange } from \"../types\";\n\nexport const colorChanger=(color)=>dispatch=>(\n    dispatch({type:FillColorChange,payload:color})\n)","import React,{Fragment} from \"react\";\nimport {useState,useEffect} from 'react'; \nimport {useSelector} from 'react-redux'\n\n\nexport default function Index(){\n    //using react hooks to fetch the data from the server. \n    let [data_list,setData] = useState({})\n    let [tabular,setTabular]=useState(<div></div>)\n//    data_list.data_list.features=[] // to avoid an error coming from useState(). \n    let [match,setMatch]=useState([{ \"type\": \"Feature\", \"properties\": { \"OBJECTID_1\": 0, \"OBJECTID\": 0, \"PAU_NAME\": \"\", \"VILLAGE\": \"\", \"PAU_CODE\": \"\", \"VILL_CODE\": \"\", \"ST_NAME\": \"\", \"ST_CODE\":0, \"LOC_NAME\": \"\", \"LOC_CODE\": \"\", \"AU_NAME\": \"\", \"AU_CODE\": \"\", \"Elec\":0, \"Phone\":0, \"WC\":0, \"OID_Join\": \"\", \"State\": \"\", \"County\": \"\", \"AU\": \"\", \"PAU\": \"\", \"M_0_4\":0, \"F_0_4\": 57, \"M_5_14\": 81, \"F_5_14\": 96, \"M_15_24\": 45, \"F_15_24\": 76, \"M_25_44\": 37, \"F_25_44\": 69, \"M_45_Plus\": 26, \"F_45_Plus\": 39, \"TOT_POP\": 577, \"Tot_HHS\": 119, \"Shape_Leng\": 3946.73463636, \"Shape_Le_1\": 3946.73463636, \"Shape_Area\": 488029.18487400003, \"Fam\": null, \"Census\": null, \"ES1\": null, \"ES2\": null }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": []} }])\n\n    useEffect(()=>{ // there is a design probelm here , instead of fetch again for the same data, use redux \n        let fun= async()=>{await fetch('http://197.252.18.152:8000/state/paus/').then(res=>{return res.json()}).then(\n            (data)=>{setData({data_list:data})})\n    } \n        fun()  // this way of async fetching iniside useefect is described by the docs \n    },[])\n    // getting a name from the reducer for search\n    let name=useSelector(state=>state.SearchReducer.Name);\n    // filling the data \n    useEffect(()=>{\n        if(Object.keys(data_list).length!=0 && name!=''){\n            let filtered_match=data_list['data_list']['features'].filter(match=>match.properties.pau_name===name)\n            setMatch(filtered_match)\n        }\n        else{\n    if(Object.keys(data_list).length!=0){\n        let filtered_match =data_list['data_list']['features']\n        setMatch(filtered_match)\n    }\n}\n   \n    },[data_list,name]) \n    \n    useEffect(()=>{\n        setTabular(<table style={{width:'100%',position:'relative',top:'38px'}}className='table table-striped'>    \n        <thead className='thead-dark'>\n            <tr>\n                <th>Locality Name</th>\n                <th>Block Name</th>\n                <th>Census 2008 </th>\n                <th>Census Estimation 2018</th>\n                <th>Census Estimation 2020</th>\n            </tr>\n        </thead>\n        <tbody>\n            {match.map((block,index)=>   \n            <tr key={index}>\n                <td style={{fontFamily:'Cairo'}}>{block.properties.au_name}</td>\n                <td style={{fontFamily:'Cairo'}}>{block.properties.pau_name}</td>\n                <td style={{textAlign:'center',fontFamily:'Open Sans',fontSize:'19px'}}>{isNaN(parseInt(block.properties.census))?'No Data':parseInt(block.properties.census)}</td>\n                <td style={{textAlign:'center',fontFamily:'Open Sans',fontSize:'19px'}}>{isNaN(parseInt(block.properties.es1))?'No Data':parseInt(block.properties.es1)}</td>\n                <td style={{textAlign:'center',fontFamily:'Open Sans',fontSize:'19px'}}>{isNaN(parseInt(block.properties.es2))?'No Data':parseInt(block.properties.es2)}</td>\n            </tr>)\n\n            }\n        </tbody>\n    </table>)\n\n    },[match])\n\n    \n    return(\n            <div className='' style={{marginTop:'100px'}}>\n                {tabular}\n            </div>\n    )\n}","// this action is about adding coordinates when a user clicks on the map, it is used to\n// compute the shortest path... \nimport {ClosestFacilityComputer} from '../../types'\n\nexport const changeCoords=(coordsOb)=>dispatch=>{\n    dispatch(\n        {\n        type:ClosestFacilityComputer,\n        payload:coordsOb\n    }   )\n    \n}","import React, { Component, Fragment } from 'react'\r\n// import leaflet-react component \r\nimport {Map,TileLayer,Marker,Popup,Circle,GeoJSON,Layer} from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport L from 'leaflet'\r\n// import from styled components\r\nimport {MapContainer,LeafMapContainer} from './styles/style'\r\n// import sidebar \r\nimport Sidebar from '../Sidebar/Sidebar/index'\r\n// import togglers, Map/Data/Search \r\nimport TogglersContainer from '../Togglers/TogglersContainer/index'\r\n// import Geojson which holds the actual Public adminstration units \r\nimport GeoJSON_ from './MapComponents/Geojson'\r\n// import conntect for redux states\r\nimport {connect} from 'react-redux'\r\n// import data view \r\nimport Tabular from '../DataView/Table/index'\r\n// import latlng action to handle clicking maps latlng. \r\nimport {changeCoords} from \"../../Actions/ActionsCreators/ColsestFacilityComputer/changeCoords\";\r\n\r\n\r\nclass index extends Component {\r\n    constructor(props){\r\n            super(props);\r\n            this.state={\r\n                // set the inital location and zoom level \r\n                lat:15.570498544455713,\r\n                long:32.532881032138349,\r\n                zoom:15,\r\n                view:'Map',\r\n                // set the tile,it comes from redux(mapStateToProps), and changes as the user clicks\r\n                tile:this.props.tile,\r\n                // set the fly effect, when the user search for a certain place.  \r\n                Flying_match:{}, \r\n                // send click latlng to backend for network analysis \r\n                clicklatlng:{},\r\n                // getting a response from the server \r\n                shortest_line:{},\r\n                shortest_line_json_key:2, \r\n            }\r\n            this.GeojsononEach = this.GeojsononEach.bind(this);\r\n            this.matched = this.matched.bind(this);\r\n            this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.map = this.mapInstance.leafletElement; \r\n    }\r\n \r\n    matched(MatchedItem=''){\r\n        this.setState({Flying_match:MatchedItem},()=>{this.GeojsononEach()})\r\n        \r\n    }\r\n    GeojsononEach(feature,layer){\r\n        let matched = this.state.Flying_match\r\n        let popupContent='';\r\n\r\n        // set the popup, this may change to be a modal instead of using leaflet. \r\n          \r\n        if(Object.keys(matched).length==0){ //check the Flying_match object length to prevent error when reacts first loads, when the user clicks to fly to searched place.\r\n        // ineed to change this to just bind the popup on user clicks, also note that \r\n        // a problem i wanted to solve is when the map flys, a popup opens dynamically \r\n\r\n        popupContent = `<Popup><p>Block Name:${feature.properties.PAU_NAME}</p>\r\n        <p>2008 Census:${parseInt(feature.properties.Census)}</p>\r\n        <p>2020 Population:${parseInt(feature.properties.ES2)}</p>\r\n        </Popup>`\r\n        layer.bindPopup(popupContent)\r\n        }\r\n        // here you can handle events on the json object. \r\n        layer.on({\r\n            click:this.handleClick\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps!=this.props){\r\n           //console.log('Map object:previous props',prevProps)\r\n            this.setState({view:this.props.view,\r\n            tile:this.props.tile,\r\n            })\r\n        }\r\n        if(prevProps.MatchedItem!=this.props.MatchedItem){\r\n            let [Fly1,Fly2] = this.props.MatchedItem.geometry.coordinates[0][0][0];\r\n            // check if the view is a map view or data view. \r\n            if(this.state.view=='Map'){this.map.flyTo([Fly2,Fly1],15);\r\n            this.matched(this.props.MatchedItem)  \r\n            }\r\n        }\r\n    }\r\n\r\n    handleClick(e){\r\n        // this is a props coming from redux \r\n        this.props.changeCoords(e.latlng)\r\n        this.setState({clicklatlng:e.latlng})\r\n        let key = this.state.shortest_line_json_key;\r\n        key++; \r\n        // making a post request \r\n        fetch('http://197.252.18.152:8000/state/closest_healthcare/',{\r\n            method:'POST',\r\n            mode:'cors',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify(this.props.getMapCoords.coords)\r\n        }).then(res=>res.json()).then(data=>{this.setState({shortest_line:data,shortest_line_json_key:key})})\r\n        \r\n        // on subsquent clicks, the original state shortest line should change \r\n    \r\n    \r\n    }\r\n    render() {\r\n        L.Icon.Default.imagePath='img/'; \r\n        const position = [this.state.lat,this.state.long];   // initial position \r\n        let view = this.state.view;  // map or data view \r\n        if(view=='Map'){\r\n            // setting up the blocks and shortest line \r\n            let Blocks=<Fragment></Fragment>\r\n            let shortest_line=<Fragment></Fragment>\r\n            // filling up Blocks with geometry\r\n            if(this.props.jsonSwitcher!='off'){\r\n                Blocks= <GeoJSON_ onEach={this.GeojsononEach}/> \r\n            }\r\n            // filling up shortest line with geometry \r\n            else if(Object.keys(this.state.shortest_line).length!=0){\r\n                shortest_line= <GeoJSON data={this.state.shortest_line} key={this.state.shortest_line_json_key}/>\r\n            }   \r\n        return (\r\n            <div>\r\n                <MapContainer> {/*Map container holds both map and sidebar*/}\r\n                    <Sidebar></Sidebar>\r\n                    <LeafMapContainer> {/* this is the actual map */}\r\n                        <Map center={position} zoom={this.state.zoom} style={{width:'100%',height:'100%'}} ref={e => { this.mapInstance = e }} onclick={this.handleClick}>\r\n                            <TileLayer url={this.state.tile}/>\r\n                            {Blocks}\r\n                            {shortest_line}\r\n                        </Map>\r\n                    </LeafMapContainer>\r\n                    <TogglersContainer/>\r\n                </MapContainer>\r\n            </div>\r\n        )\r\n    }\r\n        else{ // tablular data \r\n            return(\r\n                <div style={{height:'100vh'}}>\r\n                    <TogglersContainer/>\r\n                    <Tabular></Tabular>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>({\r\n    view:state.ToggleView.View,  // the view either to be map or tabular\r\n    tile:state.ChangeTile.Tile,  // the tile changes dynamically as the user clicks  \r\n    MatchedItem:state.SearchReducer.MatchedItem,  // this is the item to be passed to geojson.\r\n    getMapCoords:state.ClosestFacilityReducer.coords,     // this is the coords.  \r\n    jsonSwitcher:state.ClosetHealthCareRemoveJson.switcher, // switch json off and on to let a room for the user to click. \r\n\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,{changeCoords})(index); ","import {FillColorChange,OutlineColorChange} from '../Actions/types'\n\nconst State = {fillColor:'blue',OutlineColor:'none'};\n\nexport default function LayerColorReducer(state=State,action){\n    switch(action.type){\n        case FillColorChange:return{\n            ...state,\n            fillColor:action.payload\n        }\n        case OutlineColorChange:return{\n            ...state,\n            OutlineColor:action.payload\n        }\n        default:return(state)\n    }\n}","import {ToggleMapView,ToggleDataView} from '../Actions/types'\n\nconst State = {View:'Map'};\n\nexport default function  ToggleViewReducer(state=State,action){\n    switch(action.type){\n        case ToggleMapView:return{\n            ...state, \n            View:action.payload\n        }\n        case ToggleDataView:return{\n            ...state,\n            View:action.payload\n        }\n        default:return {...state}\n    }\n}","import {ChangeTile} from '../Actions/types'\n\nconst State = {Tile:'https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png'};\n\nexport default function LayerColorReducer(state=State,action){\n    switch(action.type){\n        case ChangeTile:return{\n            ...state,\n            Tile:action.payload\n        }\n        default:return(state)\n    }\n}","import {SearchItemClicked} from '../Actions/types'\nimport {SearchTableItem} from '../Actions/types'\n\nconst State = {MatchedItem:[],Name:''};\n\nexport default function LayerColorReducer(state=State,action){\n    switch(action.type){\n        case SearchItemClicked:console.log('Search Reducer:',action.payload);return{\n            ...state,\n        MatchedItem:action.payload\n        }\n        case SearchTableItem:return{...state,Name:action.payload};\n\n        default:return(state)\n    }\n}","import {ClosestFacilityComputer} from '../Actions/types'\nimport {ClosestFacilityComputerRemoveJson} from '../Actions/types'\n\nlet State={\n    // the coords got from the map and sent to the server to compute \n    coords:{},   \n    switcher:'off',\n} \n\nexport default function ClosestFacilityReducer(state=State,action){\n    switch(action.type){\n        case ClosestFacilityComputer:return{\n            ...state,\n            coords:{...state.coords,coords:action.payload}\n        }\n        case ClosestFacilityComputerRemoveJson:return{\n            ...state,\n            switcher:action.payload\n        }\n\n        default:return{state}\n    }\n}\n","import {combineReducers} from 'redux';\nimport LayerColorsReducers from './LayerColorsReducer';\nimport ToggleView from \"./TogglersReducer\";\nimport TileReducer from './TileReducer'\nimport SearchReducer from './SearchReducer'\nimport ClosestFacilityReducer from \"./ClosestHealthCare\";\nimport RemoveJson from './ClosestHealthCare'\n\nexport default combineReducers({\n    LayerColors: LayerColorsReducers,\n    ToggleView:ToggleView,\n    ChangeTile:TileReducer,\n    SearchReducer:SearchReducer,\n    ClosestFacilityReducer,\n    ClosetHealthCareRemoveJson:RemoveJson,\n})\n","import {createStore,applyMiddleware} from 'redux';\r\nimport rootReducer from './Reducers';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer,initialState,composeWithDevTools(applyMiddleware(...middleware))); \r\nexport default store; \r\n","import React ,{Component}from 'react';\nimport './App.css';\nimport Map from './Components/Map/index'\nimport store from './store'\nimport {Provider} from 'react-redux'\nimport './bootstrap.min.css'\nclass App extends Component {\n  componentWillMount(){\n    document.title = \"Khartoum state vulnerability map\"\n  }\n  render(){\n    return(\n      <Provider store={store}>\n      <div>\n        <Map/>\n      </div>\n      </Provider>\n    )}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>,document.getElementById(\"root\"));\nserviceWorker.register();\n"],"sourceRoot":""}