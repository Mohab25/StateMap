{"version":3,"sources":["Components/Sidebar/InnerContainer/Widgets/Tiles/TilesPickers/images/Dark.jpg","Components/Sidebar/InnerContainer/Widgets/Tiles/TilesPickers/images/Light.jpg","Components/Sidebar/InnerContainer/Widgets/Tiles/TilesPickers/images/Topo.jpg","Components/Map/styles/style.js","Components/Sidebar/Sidebar/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersColorPickers/LayerContentColor/styles/styles.js","Actions/ActionsCreators/LayerColorChange.js","Actions/types.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersColorPickers/LayerContentColor/index.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersColorPickers/LayersOutlineColor/styles/styles.js","Actions/ActionsCreators/LayerOutlineColorChange.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersColorPickers/LayersOutlineColor/index.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersLabels/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersLabels/index.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersBodyHolder/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Layers/LayersBodyHolder/index.js","Components/Sidebar/InnerContainer/Widgets/Tiles/TilesBodyHolder/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Tiles/TilesPickers/TilesPicker/styles/styles.js","Actions/ActionsCreators/TileChange/ChangeTile.js","Components/Sidebar/InnerContainer/Widgets/Tiles/TilesPickers/TilesPicker/index.js","Components/Sidebar/InnerContainer/Widgets/Tiles/TilesBodyHolder/index.js","Components/Sidebar/InnerContainer/Widgets/Layer/LayersColorPickers/LayerContentColor/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Layer/LayersColorPickers/LayersOutlineColor/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Layer/LayersLabels/styles/styles.js","Components/Sidebar/InnerContainer/Widgets/Layer/LayersBodyHolder/styles/styles.js","Components/Sidebar/InnerContainer/index.js","Components/Sidebar/SideIcon/styles/styles.js","Components/Sidebar/SideIcon/index.js","Actions/ActionsCreators/ColsestFacilityComputer/RemoveJson.js","Components/Sidebar/Sidebar/index.js","Components/Togglers/TogglersContainer/styles/styles.js","Components/Togglers/DataToggler/styles/styles.js","Components/Togglers/DataToggler/index.js","Actions/ActionsCreators/ToggleActions/ToggleDataView.js","Components/Togglers/MapToggler/styles/styles.js","Components/Togglers/MapToggler/index.js","Actions/ActionsCreators/ToggleActions/ToggleMapView.js","Components/Togglers/SearchBar/styles/styles.js","Components/Togglers/SearchBar/index.js","Actions/ActionsCreators/Selection/searchTableItem.js","Actions/ActionsCreators/Selection/SearchClick.js","Components/Togglers/TogglersContainer/index.js","Actions/ActionsCreators/LayerColorChangeForClassComponent.js","Components/Map/MapComponents/Geojson/index.js","Components/DataView/Table/index.js","Actions/ActionsCreators/ColsestFacilityComputer/changeCoords.js","Components/Map/index.js","Reducers/LayerColorsReducer.js","Reducers/TogglersReducer.js","Reducers/TileReducer.js","Reducers/SearchReducer.js","Reducers/ClosestHealthCare.js","Reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MapContainer","styled","div","LeafMapContainer","Sidebar","props","Sideposition","SidebarTitle","h6","SectionTitle","p","SidebarOperation","SidebarInnerColorPickerContainer","SidebarInnerColorPickerText","SidebarInnerColorPickerDiv","color","ColorPalette","ColorPickedContainer","ColorPicked","colorChanger","type","payload","Index","useState","Renderer","setRenderer","colorSet2","fillColor","useSelector","state","LayerColors","dispatch","useDispatch","changeRender","onClick","map","index","key","SidebarInnerColorOutlinePickerContainer","SidebarInnerOulineColorPickerText","SidebarInnerOutlineColorPickerDiv","outline","OutlinecolorChanger","colorSet1","OutlineColor","toggleColorPalette","SidebarInnerLabelContainer","SidebarInnerLabelText","CheckToggler","input","LayerBodyHolder","height","LayerNameHolder","LayerName","LayerToggleIcon","bodyHeight","setHeight","Icon","setIcon","className","TilesBodyHolder","TilesNameHolder","TilesName","TilesToggleIcon","SidebarTilesPickerContainer","SidebarTilesPickerText","SidebarTilesPickerDiv","background","changeTile","Tileprovider","TileContent","img1","img2","img3","content","Theme","ChangeTile","overFlow","SidebarIcon","click","removeJson","switcher","SidebarPosition","SetSidebarPosition","btnType","setBtnType","indicator","setIndicator","jsonState","ClosetHealthCareRemoveJson","useEffect","e","LeafTogglersContainer","MapDataHolder","LeafDataToggler","view","ToggleView","View","console","log","switchData","LeafMapToggler","SearchContainer","LeafSearchBar","Matchcard","cardmatches","setMatches","textInput","useRef","showSearchResult","matches","card","match","Name","matchedItem","current","value","ClearSeachBar","properties","PAU_NAME","style","fontFamily","ref","onChange","Data","features","filter","block","regex","RegExp","target","placeholder","placeholderTextColor","PolyFillColor","GeojsonKey","json_ob","onEach","bind","styler","getColorScheme","this","setState","data","prevProps","feature","layer","popupContent","parseInt","Census","ES2","bindPopup","colorPallete","pop","Object","keys","length","GeoJSON","onEachFeature","Component","connect","data_list","setData","tabular","setTabular","setMatch","a","fetch","then","res","json","fun","name","SearchReducer","filtered_match","pau_name","width","position","top","au_name","textAlign","fontSize","isNaN","census","es1","es2","marginTop","lat","long","zoom","tile","shortest_line","shortest_line_json_key","mapInstance","React","createRef","handleClick","leafletElement","MatchedItem","geometry","coordinates","Fly1","Fly2","flyTo","changeCoords","latlng","method","mode","headers","body","JSON","stringify","getMapCoords","coords","L","Default","imagePath","Blocks","jsonSwitcher","Map","center","onclick","TileLayer","url","Tile","ClosestFacilityReducer","coordsOb","State","action","combineReducers","RemoveJson","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","document","title","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fbc849ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Dark.baa0fbd3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Light.11e2b478.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Topo.beed083d.jpg\";","import styled from 'styled-components/macro';\r\n\r\nexport const MapContainer = styled.div`\r\n    width:100%;     /* the map container  holds both the map and sidebar */ \r\n    height:100vh;\r\n    padding:0px;      \r\n    overflow:hidden;\r\n    display:flex; \r\n`\r\nexport const LeafMapContainer = styled.div`\r\n    flex-basis:75%;      /* this is the actual leaflet map*/ \r\n    height:100%; \r\n    padding:0px; \r\n\r\n    @media(max-width:1000px){\r\n        flex-basis:100%; \r\n    }\r\n`","import styled from 'styled-components/macro';\r\n\r\nexport const Sidebar = styled.div`\r\n    flex-basis:25%; \r\n    height:100%;\r\n    background-color:#3f3f3f; \r\n    display:flex; \r\n    flex-direction:column; \r\n    align-items:center; \r\n    justify-content:flex-start; \r\n    top:0px; \r\n    left:0px; \r\n    transition:1.5s ;\r\n    transition-timing-function: ease-out;\r\n\r\n    @media (max-width:1000px){\r\n        overflow:hidden; \r\n        width:30%; \r\n        position:absolute; \r\n        left:${props=>props.Sideposition}px;  /*this is for toggling*/ \r\n        z-index:1001; /* the z-index of zoom signs is 1000 */\r\n    }\r\n\r\n`\r\n\r\nexport const SidebarTitle = styled.h6`\r\n    margin-top:20px; \r\n    color:white; \r\n\r\n`\r\n\r\nexport const SectionTitle = styled.p`\r\n    width:100%;     \r\n    color:white; \r\n    padding-left:20px;\r\n    padding-bottom:20px; \r\n    align-self:flex-start; \r\n    border-bottom:1px solid white; \r\n`\r\n\r\nexport const SidebarOperation = styled.div`\r\n    margin-top:5px; \r\n    width:80%;\r\n    color:white; \r\n    padding:10px;\r\n    text-align:center; \r\n`","import styled from 'styled-components/macro'\r\nexport const SidebarInnerColorPickerContainer=styled.div`\r\n    width:100%; \r\n    height:25%; \r\n    display:flex; \r\n\r\n`\r\n\r\nexport const SidebarInnerColorPickerText=styled.p`\r\n    color:white;\r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n    position:relative; \r\n    top:10%; \r\n`\r\n\r\nexport const SidebarInnerColorPickerDiv=styled.div`\r\n    width:37px; \r\n    height:37px; \r\n    background-color:${props=>props.color}; \r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n    cursor:pointer; \r\n`\r\n\r\nexport const ColorPalette=styled.div`\r\n    width:320px;\r\n    height:250px;\r\n    position:absolute; \r\n    top:0px; \r\n    left:0px; \r\n    background-color:#3f3f3f;\r\n    display:flex; \r\n    flex-direction:column;    \r\n`\r\n\r\nexport const ColorPickedContainer=styled.div`\r\n    width:100%; \r\n    height:100px;\r\n    display:flex; \r\n    flex-direction:row;\r\n    justify-content:space-evenly;      \r\n    align-items:center; \r\n`\r\n\r\nexport const ColorPicked = styled.div`\r\n    width:60px;\r\n    height:60px; \r\n    background-color:${props=>props.color}; \r\n    cursor:pointer; \r\n    color:white; \r\n`","import { FillColorChange } from \"../types\";\n\nexport const colorChanger=(color)=>{\n    let newColor = {type:FillColorChange,payload:color}; \n    return newColor; \n}\n","export const FillColorChange = 'FillColorChange';\nexport const OutlineColorChange = 'OutlineColorChange';\nexport const ToggleMapView = 'ToggleMapView'; \nexport const ToggleDataView = 'ToggleDataView'; \nexport const ChangeTile = 'ChangeTile'\nexport const GEOJsonClicked = 'GEOJSONCLICKED'\nexport const SearchItemClicked = 'SEARCHITEMCLICKED'\nexport const SearchTableItem = 'SEARCHTABLEITEM'\nexport const ClosestFacilityComputer = 'ClosestFacilityComputer'\nexport const ClosestFacilityComputerRemoveJson = 'ClosestFacilityComputerRemoveJson'\n","import React,{Fragment,useState} from 'react'\r\nimport {SidebarInnerColorPickerContainer,SidebarInnerColorPickerText,\r\n    SidebarInnerColorPickerDiv,ColorPalette,ColorPickedContainer,ColorPicked} \r\nfrom './styles/styles'\r\nimport {useSelector,useDispatch} from 'react-redux' \r\nimport {colorChanger} from '../../../../../../../Actions/ActionsCreators/LayerColorChange'\r\n\r\n\r\nexport default function Index() {\r\n    const [Renderer,setRenderer] = useState(''); \r\n    //const [colorSet1,SetColors1] = useState(['white','black','grey']); \r\n    const [colorSet2,SetColors2] = useState(['green','blue','red']);\r\n    const fillColor = useSelector(state=>state.LayerColors.fillColor); \r\n    const dispatch = useDispatch();\r\n\r\n    let changeRender=()=>{\r\n        if(Renderer===''){\r\n        setRenderer('Color Palette');\r\n        }\r\n        else{\r\n            setRenderer('')\r\n        }\r\n    }\r\n\r\n    if(Renderer===''){\r\n        return (\r\n            <Fragment>\r\n                <SidebarInnerColorPickerContainer>\r\n                    <SidebarInnerColorPickerText>color</SidebarInnerColorPickerText>\r\n                    <SidebarInnerColorPickerDiv color={fillColor} onClick={changeRender}></SidebarInnerColorPickerDiv>\r\n                </SidebarInnerColorPickerContainer>\r\n            </Fragment>\r\n        )\r\n    }\r\n    else {\r\n        return(\r\n            <Fragment>\r\n                <ColorPalette onClick={changeRender}>\r\n                {/*<ColorPickedContainer>\r\n                    {colorSet1.map((color,index)=><ColorPicked key={index} color={color} onClick={()=>dispatch(colorChanger(color))}/>)}\r\n                </ColorPickedContainer>*/}\r\n                    <ColorPickedContainer>\r\n                        {colorSet2.map((color,index)=><ColorPicked key={index} color={color} onClick={()=>dispatch(colorChanger(color))}/>)}\r\n                    </ColorPickedContainer>\r\n                </ColorPalette>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import styled from 'styled-components/macro'\r\n\r\nexport const SidebarInnerColorOutlinePickerContainer=styled.div`\r\n    width:100%; \r\n    height:25%; \r\n    display:flex; \r\n`\r\n\r\nexport const SidebarInnerOulineColorPickerText=styled.p`\r\n    color:white;\r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n    position:relative; \r\n    top:10%; \r\n`\r\n\r\nexport const SidebarInnerOutlineColorPickerDiv=styled.div`\r\nwidth:37px; \r\nheight:37px; \r\nbackground-color:white; \r\nalign-self:flex-start; \r\nmargin-left:20px; \r\nborder:4px solid ${props=>props.outline}; \r\n`","import { OutlineColorChange } from \"../types\";\n\nexport const OutlinecolorChanger=(color)=>{\n    let newColor = {type:OutlineColorChange,payload:color}; \n    return newColor; \n}\n","import React,{Fragment,useState} from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux' \r\nimport {SidebarInnerColorOutlinePickerContainer,SidebarInnerOulineColorPickerText,\r\nSidebarInnerOutlineColorPickerDiv} from './styles/styles'\r\nimport {ColorPalette,ColorPickedContainer,ColorPicked} from '../LayerContentColor/styles/styles'\r\nimport {OutlinecolorChanger} from '../../../../../../../Actions/ActionsCreators/LayerOutlineColorChange'\r\n\r\n\r\nexport default function Index() {\r\n    const [Renderer,setRenderer] = useState(''); \r\n    const [colorSet1,SetColors1] = useState(['white','black','grey']); \r\n    const [colorSet2,SetColors2] = useState(['green','blue','red']);\r\n    const OutlineColor = useSelector(state=>state.LayerColors.OutlineColor);\r\n    const fillColor =  useSelector(state=>state.LayerColors.fillColor);\r\n    const dispatch = useDispatch();\r\n\r\n    let toggleColorPalette=()=>{\r\n        if(Renderer===''){\r\n        setRenderer('Color Palette');\r\n        }\r\n        else{\r\n            setRenderer('')\r\n        }\r\n    }\r\n\r\n\r\n    if(Renderer===''){\r\n\r\n    return (\r\n        <Fragment>\r\n        <SidebarInnerColorOutlinePickerContainer>    \r\n            <SidebarInnerOulineColorPickerText>Outline color</SidebarInnerOulineColorPickerText>\r\n            <SidebarInnerOutlineColorPickerDiv onClick={toggleColorPalette} outline={OutlineColor} color={fillColor}></SidebarInnerOutlineColorPickerDiv>\r\n        </SidebarInnerColorOutlinePickerContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nelse {\r\n    return(\r\n        <Fragment>\r\n            <ColorPalette onClick={toggleColorPalette}>\r\n                <ColorPickedContainer>\r\n                    {colorSet1.map((color,index)=><ColorPicked key={index} color={color} onClick={()=>dispatch(OutlinecolorChanger(color))}/>)}\r\n                </ColorPickedContainer>\r\n                <ColorPickedContainer>\r\n                    {colorSet2.map((color,index)=><ColorPicked key={index} color={color} onClick={()=>dispatch(OutlinecolorChanger(color))}/>)}\r\n                </ColorPickedContainer>\r\n                <ColorPickedContainer><ColorPicked color={'grey'} onClick={()=>dispatch(OutlinecolorChanger('none'))}>None</ColorPicked></ColorPickedContainer>\r\n            </ColorPalette>\r\n        </Fragment>\r\n    )\r\n}\r\n}","import styled from 'styled-components/macro'\r\n\r\nexport const SidebarInnerLabelContainer=styled.div`\r\n    width:100%; \r\n    height:25%; \r\n    display:flex; \r\n`\r\n\r\nexport const SidebarInnerLabelText = styled.p`\r\ncolor:white;\r\nalign-self:flex-start; \r\nmargin-left:20px; \r\n`\r\n\r\nexport const CheckToggler = styled.input`\r\n    width:40px; \r\n    height:20px; \r\n    margin-left:15px; \r\n    background-color:#1f1f1f; \r\n    position:relative; \r\n    -webkit-appearance:none; \r\n    outline:none; \r\n    border-radius:20px; \r\n    transition:0.5s; \r\n    &:before{\r\n        width:20px;              /* this is an element created as the first child*/ \r\n        height:20px;\r\n        content:''; \r\n        position:absolute; \r\n        top:0px; \r\n        left:0px; \r\n        background-color:#fff; \r\n        border-radius:20px; \r\n        transition:0.5s;  \r\n        cursor:pointer;   \r\n    }\r\n    &:checked{\r\n        background-color:#000080; \r\n        &:before{\r\n        left:20px;  /* moving the element 20px left */\r\n    }\r\n}\r\n\r\n    \r\n`","import React,{Fragment} from 'react'\r\nimport {SidebarInnerLabelContainer,SidebarInnerLabelText, CheckToggler} from './styles/styles'\r\n\r\nexport default function index() {\r\n    return (\r\n        <Fragment>\r\n            <SidebarInnerLabelContainer>\r\n                <SidebarInnerLabelText>Label</SidebarInnerLabelText>\r\n                <CheckToggler type='checkbox'></CheckToggler>\r\n            </SidebarInnerLabelContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n","import styled from 'styled-components/macro'\r\n\r\nexport const LayerBodyHolder = styled.div`\r\n    width:90%; \r\n    height:${props=>props.height}px; \r\n    background-color:#2f2f2f; \r\n    margin-left:-2%;\r\n    display:flex; \r\n    flex-direction:column; \r\n    justify-content:space-between; \r\n    align-items:flex-start; \r\n    align-content:space-evenly; \r\n    overflow:hidden;\r\n    transition:1s; \r\n`\r\n\r\nexport const LayerNameHolder = styled.div`\r\n    width:100%; \r\n    background-color:#1f1f1f; \r\n    padding:10px; \r\n    display:flex;  \r\n    flex-direction:row; \r\n    justify-content:space-between; \r\n    cursor:pointer; \r\n`\r\n\r\nexport const LayerName = styled.p`\r\n    color:white;\r\n`\r\n\r\nexport const LayerToggleIcon =styled.p`     \r\n    color:white;\r\n`","import React,{useState} from 'react'\r\nimport ContentColorPicker from '../LayersColorPickers/LayerContentColor/index'\r\nimport OutlineColorPicker from '../LayersColorPickers/LayersOutlineColor/index'\r\nimport Label from '../LayersLabels/index'\r\nimport {LayerBodyHolder,LayerNameHolder,LayerName,LayerToggleIcon} from './styles/styles'\r\n\r\nexport default function Index() {\r\n    let [bodyHeight,setHeight]=useState('50'); \r\n    let [Icon,setIcon] = useState('icon-plus')\r\n    let toggleHeightAndOverflow=()=>{\r\n        /**\r\n         * set the height of the settings container and toggle plus-minus icon. \r\n         */\r\n        if(bodyHeight==='380'){\r\n            // if the height is 380, minimize it and toggle the icon className. \r\n            setHeight('50');\r\n            setIcon('icon-plus')\r\n        }\r\n        else if(bodyHeight==='50'){\r\n            // if the height is 50, maximize it and toggle the icon className. \r\n            setHeight('380')\r\n            setIcon('icon-check-minus')\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <LayerBodyHolder height={bodyHeight}>\r\n                <LayerNameHolder onClick={toggleHeightAndOverflow}>\r\n                    <LayerName>Color Scheme</LayerName>\r\n                    <LayerToggleIcon className={Icon}></LayerToggleIcon>\r\n                </LayerNameHolder>\r\n                <ContentColorPicker/>\r\n                <OutlineColorPicker/>\r\n                <Label/>\r\n            </LayerBodyHolder>\r\n        </>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const TilesBodyHolder = styled.div`\r\n    width:90%; \r\n    height:${props=>props.height}px; /* this is because of toggling the height*/\r\n    background-color:#2f2f2f; \r\n    margin-left:-2%;\r\n    display:flex; \r\n    flex-direction:column; \r\n    justify-content:flex-start ; \r\n    align-items:flex-start; \r\n    align-content:space-evenly; \r\n    overflow:hidden; \r\n    transition:1s; \r\n`\r\n\r\nexport const TilesNameHolder = styled.div`\r\n    width:100%; \r\n    background-color:#1f1f1f; \r\n    padding:10px; \r\n    display:flex;  \r\n    justify-content:space-between; \r\n    cursor:pointer; \r\n`\r\n\r\nexport const TilesName = styled.p`\r\n    color:white;\r\n`\r\n\r\nexport const TilesToggleIcon =styled.p`     \r\n    color:white;\r\n`","import styled from 'styled-components'\r\nexport const SidebarTilesPickerContainer=styled.div`\r\n    width:100%; \r\n    height:300px; \r\n    overflow-y:scroll\r\n`\r\n\r\nexport const SidebarTilesPickerText=styled.p`\r\n    color:white;\r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n`\r\n\r\nexport const SidebarTilesPickerDiv=styled.div`\r\n    width:85%; \r\n    height:150px;\r\n    margin:auto;  \r\n    background:url(${props=>props.background}); \r\n    align-self:flex-start; \r\n    cursor:pointer; \r\n`","import {ChangeTile} from '../../types';\n\nexport const changeTile=(Tileprovider)=>{\n    return {\n        type:ChangeTile,\n        payload:Tileprovider\n    }\n}","import React,{Fragment} from 'react'\r\nimport {SidebarTilesPickerContainer,SidebarTilesPickerText,SidebarTilesPickerDiv} \r\nfrom './styles/styles'\r\nimport {useDispatch} from 'react-redux'\r\nimport img1 from '../images/Dark.jpg'\r\nimport img2 from '../images/Light.jpg'\r\nimport img3 from '../images/Topo.jpg'\r\n\r\nimport { changeTile } from \"../../../../../../../Actions/ActionsCreators/TileChange/ChangeTile\";\r\nimport { colorChanger } from \"../../../../../../../Actions/ActionsCreators/LayerColorChange\";\r\n\r\n\r\nexport default function Index() {\r\n    let dispatch = useDispatch()\r\n    let ChangeTile=(Theme)=>{\r\n        switch(Theme){\r\n            case 'Dark Theme':dispatch(changeTile('https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png'));dispatch(colorChanger('blue'));break; \r\n            case 'Light Theme':dispatch(changeTile('https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png'));dispatch(colorChanger('red'));break; \r\n            case 'Topo Theme': dispatch(changeTile('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png'));dispatch(colorChanger('red'));break;\r\n        }\r\n    }\r\n    \r\n    const imgs = [[img1,'Dark Theme'],[img2,'Light Theme'],[img3,'Topo Theme']]\r\n    const TileContent = imgs.map((content,index)=>\r\n        <Fragment key={index}>\r\n        <SidebarTilesPickerText>{content[1]}</SidebarTilesPickerText>\r\n        <SidebarTilesPickerDiv onClick={()=>ChangeTile(content[1])} background={content[0]}></SidebarTilesPickerDiv>\r\n        </Fragment>\r\n        )\r\n    return (\r\n        <>\r\n            <SidebarTilesPickerContainer>\r\n                {TileContent}\r\n            </SidebarTilesPickerContainer>\r\n        </>\r\n    )\r\n}\r\n","import React,{Fragment,useState} from 'react'\r\nimport '../../../../../../assets/font-awesome/css/font-awesome.css'\r\nimport {TilesBodyHolder,TilesNameHolder,TilesName,TilesToggleIcon} from './styles/styles'\r\nimport TilePicker from '../TilesPickers/TilesPicker'\r\n\r\n\r\nexport default function Index() {\r\n    let [bodyHeight,setHeight]=useState('50'); \r\n    let [Icon,setIcon] = useState('icon-plus')\r\n    let toggleHeightAndIcon=()=>{\r\n        if(bodyHeight==='380'){\r\n            setHeight('50');\r\n            setIcon('icon-plus')\r\n        }\r\n        else if(bodyHeight==='50'){\r\n            setHeight('380')\r\n            setIcon('icon-check-minus')\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <TilesBodyHolder height={bodyHeight}>\r\n                <TilesNameHolder onClick={toggleHeightAndIcon}>\r\n                    <TilesName>Tiles</TilesName>\r\n                    <TilesToggleIcon><i className={Icon}></i></TilesToggleIcon>\r\n                </TilesNameHolder>\r\n                <TilePicker/>\r\n            </TilesBodyHolder>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import styled from 'styled-components/macro'\r\nexport const SidebarInnerColorPickerContainer=styled.div`\r\n    width:100%; \r\n    height:25%; \r\n \r\n`\r\n\r\nexport const SidebarInnerColorPickerText=styled.p`\r\n    color:white;\r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n`\r\n\r\nexport const SidebarInnerColorPickerDiv=styled.div`\r\n    width:50px; \r\n    height:30px; \r\n    background-color:red; \r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n`","import styled from 'styled-components'\r\n\r\nexport const SidebarInnerColorOutlinePickerContainer=styled.div`\r\n    width:100%; \r\n    height:25%; \r\n\r\n`\r\n\r\nexport const SidebarInnerOulineColorPickerText=styled.p`\r\n    color:white;\r\n    align-self:flex-start; \r\n    margin-left:20px; \r\n`\r\n\r\nexport const SidebarInnerOutlineColorPickerDiv=styled.div`\r\nwidth:50px; \r\nheight:30px; \r\nbackground-color:green; \r\nalign-self:flex-start; \r\nmargin-left:20px; \r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const SidebarInnerLabelContainer=styled.div`\r\n    width:100%; \r\n    height:25%; \r\n`\r\n\r\nexport const SidebarInnerLabelText = styled.p`\r\ncolor:white;\r\nalign-self:flex-start; \r\nmargin-left:20px; \r\n`","import styled from 'styled-components/macro'\r\n\r\nexport const LayerBodyHolder = styled.div`\r\n    width:90%; \r\n    height:${props=>props.height}px; \r\n    background-color:#2f2f2f; \r\n    margin-left:-2%;\r\n    display:flex; \r\n    flex-direction:column; \r\n    justify-content:space-between; \r\n    align-items:flex-start; \r\n    align-content:space-evenly; \r\n    overflow:${props=>props.overFlow};\r\n    transition:1s; \r\n`\r\n\r\nexport const LayerNameHolder = styled.div`\r\n    width:100%; \r\n    background-color:#1f1f1f; \r\n    padding:10px; \r\n    display:flex;  \r\n    flex-direction:row; \r\n    justify-content:space-between; \r\n    cursor:pointer; \r\n`\r\n\r\nexport const LayerName = styled.p`\r\n    color:white;\r\n`\r\n\r\nexport const LayerToggleIcon =styled.p`     \r\n    color:white;\r\n`","import React,{Fragment} from 'react'\r\nimport {innerContainer} from './styles/styles'\r\nimport LayerBody from './Widgets/Layers/LayersBodyHolder/index'\r\nimport Tiles from './Widgets/Tiles/TilesBodyHolder/index'\r\nimport Schemes from './Widgets/Layer/LayersBodyHolder/index'\r\n\r\n\r\nexport default function index() {\r\n    return (\r\n        <Fragment>\r\n                <LayerBody/>\r\n                <Tiles/>\r\n                {/*<Schemes/>*/}\r\n        </Fragment>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const SidebarIcon = styled.div`\r\n    width:30px;\r\n    height:35px;\r\n    background:url(img/layers.png) no-repeat;\r\n    position:absolute; \r\n    top:0px; \r\n    left:0px; \r\n    display:none; \r\n    cursor:pointer;\r\n    @media(max-width:1000px){\r\n        display:block;\r\n        position:absolute;  \r\n        top:75px;\r\n        left:10px;\r\n        z-index:13000;\r\n    }\r\n`","import React from 'react'\r\nimport {SidebarIcon} from './styles/styles'\r\nexport default function index(props) {\r\n    return (\r\n        <>\r\n            <SidebarIcon onClick={props.click}/>\r\n        </>\r\n    )\r\n}\r\n","import {ClosestFacilityComputerRemoveJson} from '../../types';\n\nexport const removeJson=(switcher)=>{\n    return {\n        type:ClosestFacilityComputerRemoveJson,\n        payload:switcher\n    }\n}\n","import React,{useState,useEffect} from 'react'\r\nimport {Sidebar,SidebarTitle,SectionTitle,SidebarOperation} from './styles/styles'\r\nimport InnerDiv from '../InnerContainer/index'\r\nimport SidebarIcon from '../SideIcon/index'\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport {removeJson} from '../../../Actions/ActionsCreators/ColsestFacilityComputer/RemoveJson'\r\n\r\n\r\n// look, you have to change the color and button text according latlng array length \r\n\r\n\r\nexport default function Index() {\r\n    let [SidebarPosition,SetSidebarPosition] = useState('-500');\r\n    let [btnType,setBtnType] = useState('warning')\r\n    let [indicator,setIndicator] = useState('Closet Healthcare')\r\n\r\n    const toggleSidebar=()=>{\r\n            if (SidebarPosition === '-500'){\r\n                SetSidebarPosition('0')\r\n            }\r\n            else if(SidebarPosition==='0'){\r\n                SetSidebarPosition('-500')\r\n            }\r\n\r\n        }\r\n\r\n        let jsonState = useSelector(state=>state.ClosetHealthCareRemoveJson)\r\n        let dispatch = useDispatch()\r\n        const compute=(e)=>{\r\n        /* a state, according to it the geojson should be removed and \r\n         the text and color of the button should change. \r\n        after the user clicks on the map and re-click button, the state should reflect \r\n        this, and the compute functionality should change so it brings data from the \r\n        database. \r\n        if the user re-click on the map, it should remove the latest state and \r\n        add a new one reflecting the coords. \r\n        . \r\n\r\n         */\r\n        let jsonstate = jsonState;\r\n\r\n        if(jsonstate.switcher==='off'){ // this controls the geojson switching \r\n            dispatch(removeJson('on'))\r\n            setBtnType('warning')\r\n            setIndicator('Closet Healthcare')\r\n        }\r\n        else{\r\n            dispatch(removeJson('off'))\r\n            setBtnType('danger')\r\n            setIndicator('Click on Map')\r\n        }\r\n\r\n    }\r\n\r\n        useEffect(()=>{\r\n            dispatch(removeJson('on'))   // when the component mounts for the first time uses let the geojson appears \r\n        },[]); \r\n\r\n    return (\r\n        <>\r\n            <Sidebar Sideposition={SidebarPosition}>\r\n            <SidebarTitle>Mohab Jam</SidebarTitle>\r\n            <SectionTitle>Layer Settings</SectionTitle>\r\n            <InnerDiv></InnerDiv>\r\n            <SectionTitle>Computations</SectionTitle>\r\n            <SidebarOperation className={`btn btn-${btnType}`} onClick={compute}>{indicator}</SidebarOperation>\r\n            </Sidebar>\r\n            <SidebarIcon click={toggleSidebar}/>\r\n        </>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const LeafTogglersContainer= styled.div`\r\n    padding:5px 15px; \r\n    position:fixed; \r\n    top:30px; \r\n    right:60px; \r\n    z-index:10000;\r\n    display:flex; \r\n    flex-direction:row; \r\n    justify-content:flex-start; \r\n    align-items:center; \r\n\r\n    @media (min-width: 200px) {\r\n        width:100px;\r\n        right:15px; \r\n        flex-direction: column;\r\n        justify-content:flex-end;\r\n        align-items:center; \r\n        margin-top:-20px; \r\n      }\r\n    \r\n`\r\n\r\nexport const MapDataHolder = styled.div`\r\n    position:absolute; \r\n    top:5px; \r\n    right:0px; \r\n    display:flex; \r\n    flex-direction:row; \r\n    margin-left:50px; \r\n\r\n    @media (min-width: 200px) {\r\n        flex-direction: column;\r\n        justify-content:flex-end;\r\n        align-items:start; \r\n      }\r\n`","import styled from 'styled-components'\r\n\r\nexport const LeafDataToggler= styled.div`\r\n    margin-top:10px; \r\n    padding:5px 15px; \r\n    background-color:white; \r\n    z-index:10000;\r\n    color:white;\r\n    background-color:teal; \r\n    cursor:pointer\r\n`","import React from 'react'\r\nimport {LeafDataToggler} from './styles/styles'\r\nimport {useSelector,useDispatch} from 'react-redux' \r\nimport {toggleDataView} from '../../../Actions/ActionsCreators/ToggleActions/ToggleDataView'\r\n\r\nexport default function Index() {\r\n\r\n    let view = useSelector(state=>state.ToggleView.View); \r\n    let dispatch = useDispatch(); \r\n\r\n    let switchData=(view)=>{\r\n        // change redux state. \r\n        dispatch(toggleDataView())\r\n        console.log(view)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <LeafDataToggler onClick={()=>switchData(view)}>Data</LeafDataToggler>\r\n        </>\r\n    )\r\n}\r\n","import {ToggleDataView} from '../../types';\n\nexport const toggleDataView=()=>{\n    return {\n        type:ToggleDataView,\n        payload:'Data'\n    }\n}","import styled from 'styled-components'\r\n\r\nexport const LeafMapToggler= styled.div`\r\n    padding:5px 15px; \r\n    background-color:white; \r\n    z-index:10000;\r\n    color:white;\r\n    background-color:teal; \r\n    margin-right:10px; \r\n    cursor:pointer;\r\n`","import React from 'react'\r\nimport {LeafMapToggler} from './styles/styles'\r\nimport {useSelector,useDispatch} from 'react-redux' \r\nimport {toggleMapView} from '../../../Actions/ActionsCreators/ToggleActions/ToggleMapView'\r\n\r\n\r\nexport default function Index() {\r\n    \r\n    let view = useSelector(state=>state.ToggleView.View); \r\n    let dispatch = useDispatch(); \r\n\r\n    let switchData=(view)=>{\r\n        // change redux state. \r\n        dispatch(toggleMapView())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <LeafMapToggler onClick={()=>switchData(view)}>Map</LeafMapToggler>\r\n        </>\r\n    )\r\n}\r\n","import {ToggleMapView} from '../../types';\n\nexport const toggleMapView=()=>{\n    return {\n        type:ToggleMapView,\n        payload:'Map'\n    }\n}","import styled from 'styled-components/macro'\r\n\r\nexport const SearchContainer=styled.div`\r\n    width:200px; \r\n    background:transparent; \r\n    display:flex;\r\n    flex-direction:column; \r\n    @media(min-width:200px){\r\n        position:relative;\r\n        top:88px; \r\n        right:155px;\r\n    }\r\n\r\n`\r\n\r\nexport const LeafSearchBar = styled.input`\r\n    width:200px;\r\n    height:30px;\r\n    background:transparent; \r\n    outline:none; \r\n    border:1px solid teal;\r\n    color:white; \r\n    ::placeholder{\r\n        color:white;\r\n    } \r\n    @media(min-width:200px){\r\n        width:300px; \r\n    }\r\n`\r\n\r\nexport const Matchcard = styled.div`\r\n    width:100%;\r\n    height:50px;  \r\n    position:relative;\r\n    right:78px; \r\n    top:8px; \r\n    overflow:hidden;\r\n    font-size:12px; \r\n    cursor:pointer; \r\n`","import React,{useState} from 'react'\r\nimport {SearchContainer,LeafSearchBar,Matchcard} from './styles/styles'\r\nimport Data from '../../../Components/Map/Selected_Areas.geojsonl.json'\r\nimport {searchItem} from \"../../../Actions/ActionsCreators/Selection/SearchClick\";\r\nimport {searchTableItem} from \"../../../Actions/ActionsCreators/Selection/searchTableItem\";\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {useRef} from 'react'\r\n\r\nexport default function Index() {\r\n    let [cardmatches,setMatches] = useState([]); \r\n    let textInput = useRef(null);\r\n\r\n    const ClearSeachBar=()=>{\r\n        textInput.current.value='';\r\n        let matches =[]; \r\n        showSearchResult(matches)\r\n    }\r\n    const handleChange=(e)=>{\r\n        let BlockList = Data.features; \r\n        // the actual filtering \r\n        let matches = BlockList.filter(block=>{\r\n            let regex = new RegExp(`^${e.target.value}`,'gi')\r\n            return block.properties.PAU_NAME.match(regex)\r\n        })\r\n        if (e.target.value===''){\r\n            matches=[]\r\n        }\r\n        showSearchResult(matches)\r\n    }\r\n\r\n    let showSearchResult=(matches)=>{\r\n        setMatches(matches)\r\n    }\r\n    let view = useSelector(state=>state.ToggleView.View)\r\n    let dispatch = useDispatch()\r\n    let card = cardmatches.map(match=>\r\n    <div onClick={()=>{\r\n        if(view==='Map'){dispatch(searchItem(match));ClearSeachBar()}\r\n        else dispatch(searchTableItem(match.properties.PAU_NAME))\r\n    }\r\n    }>\r\n        <Matchcard className='card card-body mb-1'>\r\n            <h6 className='text-primary' style={{fontFamily:'Cairo'}}>{match.properties.PAU_NAME}</h6>\r\n        </Matchcard>\r\n    </div>\r\n        )\r\n    return (\r\n\r\n        <>\r\n            <SearchContainer>\r\n            <LeafSearchBar ref={textInput} onChange={handleChange} placeholder='Search(ِArabic)...' placeholderTextColor='green'></LeafSearchBar>\r\n            {card}\r\n            </SearchContainer>\r\n        </>\r\n    )\r\n}\r\n","import {SearchTableItem} from '../../types';\n\nexport const searchTableItem=(Name)=>{\n    console.log('Action Search Table:',Name)\n    return {\n        type:SearchTableItem,\n        payload:Name\n    }\n}\n","import {SearchItemClicked} from '../../types';\n\nexport const searchItem=(matchedItem)=>{\n    console.log('Action:',matchedItem)\n    return {\n        type:SearchItemClicked,\n        payload:matchedItem\n    }\n}\n\n// the idea is to get the name, and according to it get the coord of the polygon and \n// then fly to it . \n","import React from 'react'\r\nimport {LeafTogglersContainer,MapDataHolder} from './styles/styles'\r\nimport DataToggler from '../DataToggler'\r\nimport MapToggler from '../MapToggler'\r\nimport SearchBar from '../SearchBar' \r\nexport default function index() {\r\n    return (\r\n        <>\r\n            <LeafTogglersContainer>\r\n                <MapDataHolder>\r\n                <MapToggler/>\r\n                <DataToggler/>\r\n                </MapDataHolder>\r\n                <SearchBar/>\r\n            </LeafTogglersContainer>\r\n        </>\r\n    )\r\n}\r\n","import { FillColorChange } from \"../types\";\n\nexport const colorChanger=(color)=>dispatch=>(\n    dispatch({type:FillColorChange,payload:color})\n)","import React,{Component,Fragment} from 'react'\n// import Geojson object and popup from leaflet component, also think about using a modal\nimport {GeoJSON,Popup} from 'react-leaflet'\nimport {connect} from 'react-redux'\n// this is an action to change geojson colors\nimport {colorChanger} from '../../../../Actions/ActionsCreators/LayerColorChangeForClassComponent'\n// import data \nimport data from '../../Selected_Areas.geojsonl.json'\n\n\nclass Index extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            PolyFillColor:'grey', // by default the color is grey. \n            GeojsonKey:1,//?\n            outline:'none', // this is the outline of the geojson object, changes according to stateprops from redux \n            view:'Map',    // the view changes dynamically. \n            json_ob:{},        // holds data coming from server \n        };\n\n        this.onEach= this.onEach.bind(this);\n        this.styler = this.styler.bind(this);\n        this.getColorScheme = this.getColorScheme.bind(this)\n    }\n\n    componentDidMount(){\n        // // fetching data from django. \n        //   fetch('http://localhost:8000/state/paus/').then(res=>res.json()).then(\n        //      (d)=>{this.setState({json_ob:d})})\n        //      this.state.json_ob.name=\"State Blocks\"\n        // \n        this.setState({json_ob:data})\n    }\n\n\n    componentDidUpdate(prevProps){\n        /**\n         * prevProps holds {color: \"\", outline: \"\", view: \"\", onEach: ƒ, colorChanger: ƒ\n         */\n        if(this.props!=prevProps){\n        let key = this.state.GeojsonKey;\n        key++;     \n        this.setState({PolyFillColor:this.props.color,outline:this.props.outline,GeojsonKey:key});\n        this.setState({view:this.props.view});\n    }\n    }\n\n    onEach(feature,layer){\n        // when fetching just make these all small caps\n        const popupContent =\n            `<Popup><p>Block Name:${feature.properties.PAU_NAME}</p> \n            <p>2008 Census:${parseInt(feature.properties.Census)}</p>\n            <p>2020 Population:${parseInt(feature.properties.ES2)}</p>\n            </Popup>`\n\n        layer.bindPopup(popupContent)\n    }\n\n    getColorScheme(){\n        switch(this.state.PolyFillColor){ // according to polyfill color a scheme will be returned \n            case 'red': return ['#FBE9E7','#FFCCBC','#FFAB91','#FF8A65','#FF7043','#FF5722','#F4511E','#E64A19','#D84315','#BF360C','red'];\n            case 'green': return ['#E8F5E9','#C8E6C9','#A5D6A7','#81C784','#66BB6A','#4CAF50','#43A047','#388E3C','#2E7D32','#1B5E20','green'];\n            case 'blue' : return ['#E1F5FE','#B3E5FC','#81D4FA','#4FC3F7','#29B6F6','#03A9F4','#039BE5','#0288D1','#0277BD','#01579B','blue'];\n            default: return ['#E1F5FE','#B3E5FC','#81D4FA','#4FC3F7','#29B6F6','#03A9F4','#039BE5','#0288D1','#0277BD','#01579B','blue'];\n            //default : return ['#ECEFF1','#CFD8DC','#B0BEC5','#90A4AE','#78909C','#607D8B','#546E7A','#455A64','#37474F','#263238'] \n        }\n    }\n\n    styler(feature){\n        let colorPallete = this.getColorScheme(); // this is a list of colors \n        let pop = parseInt(feature.properties.ES2); // population estemation for 2020\n        \n        // according to population, a certain color will be returned \n        if(pop<=2000){return {color:this.state.outline,fillColor:colorPallete[0]}}\n        else if(pop>=2000&&pop<=2500){return {color:this.state.outline,fillColor:colorPallete[1]}}\n        else if(pop>=2500&&pop<=3000){return {color:this.state.outline,fillColor:colorPallete[2]}}\n        else if(pop>=3000&&pop<=3500){return {color:this.state.outline,fillColor:colorPallete[3]}}\n        else if(pop>=3500&&pop<=4000){return {color:this.state.outline,fillColor:colorPallete[4]}}\n        else if(pop>=4000&&pop<=4500){return {color:this.state.outline,fillColor:colorPallete[5]}}\n        else if(pop>=4500&&pop<=5000){return {color:this.state.outline,fillColor:colorPallete[6]}}\n        else if(pop>=5000&&pop<=5500){return {color:this.state.outline,fillColor:colorPallete[7]}}\n        else if(pop>=5500&&pop<=6000){return {color:this.state.outline,fillColor:colorPallete[8]}}\n        else if(pop>=6000&&pop<=65000){return {color:this.state.outline,fillColor:colorPallete[9]}}\n        \n        else{return {color:this.state.outline,fillColor:colorPallete[10]}};\n    \n    }\n\n    render(){\n        let view  = this.state.view; \n        if(view=='Map'){\n        if(Object.keys(this.state.json_ob).length!=0){\n        return(\n        <GeoJSON key={this.state.GeojsonKey} data={this.state.json_ob} style={this.styler} onEachFeature={this.onEach}/>                    \n        //<GeoJSON key={this.state.GeojsonKey} data={json_data} style={{color:this.state.outline,fillColor:this.state.PolyFillColor}} onEachFeature={this.onEach}/>                \n        )} else{return(<></>)}\n    }\n        else{return(<></>)}\n    }\n} \n\nconst mapStateToProps=(state)=>({\n    color:state.LayerColors.fillColor,\n    outline:state.LayerColors.OutlineColor,\n    view:state.ToggleView.View\n\n})\n\nexport default connect(mapStateToProps,{colorChanger})(Index); ","import React,{Fragment} from \"react\";\nimport {useState,useEffect} from 'react'; \nimport {useSelector} from 'react-redux'\n\n\nexport default function Index(){\n    //using react hooks to fetch the data from the server. \n    let [data_list,setData] = useState({})\n    let [tabular,setTabular]=useState(<div></div>)\n//    data_list.data_list.features=[] // to avoid an error coming from useState(). \n    let [match,setMatch]=useState([{ \"type\": \"Feature\", \"properties\": { \"OBJECTID_1\": 0, \"OBJECTID\": 0, \"PAU_NAME\": \"\", \"VILLAGE\": \"\", \"PAU_CODE\": \"\", \"VILL_CODE\": \"\", \"ST_NAME\": \"\", \"ST_CODE\":0, \"LOC_NAME\": \"\", \"LOC_CODE\": \"\", \"AU_NAME\": \"\", \"AU_CODE\": \"\", \"Elec\":0, \"Phone\":0, \"WC\":0, \"OID_Join\": \"\", \"State\": \"\", \"County\": \"\", \"AU\": \"\", \"PAU\": \"\", \"M_0_4\":0, \"F_0_4\": 57, \"M_5_14\": 81, \"F_5_14\": 96, \"M_15_24\": 45, \"F_15_24\": 76, \"M_25_44\": 37, \"F_25_44\": 69, \"M_45_Plus\": 26, \"F_45_Plus\": 39, \"TOT_POP\": 577, \"Tot_HHS\": 119, \"Shape_Leng\": 3946.73463636, \"Shape_Le_1\": 3946.73463636, \"Shape_Area\": 488029.18487400003, \"Fam\": null, \"Census\": null, \"ES1\": null, \"ES2\": null }, \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": []} }])\n\n    useEffect(()=>{ // there is a design problem here , instead of fetch again for the same data, use redux \n        let fun= async()=>{await fetch('http://localhost:8000/state/paus/').then(res=>{return res.json()}).then(\n            (data)=>{setData({data_list:data})})\n    } \n        fun()  // this way of async fetching inside useEffect is described by the docs \n    },[])\n    // getting a name from the reducer for search\n    let name=useSelector(state=>state.SearchReducer.Name);\n    // filling the data \n    useEffect(()=>{\n        if(Object.keys(data_list).length!=0 && name!=''){\n            let filtered_match=data_list['data_list']['features'].filter(match=>match.properties.pau_name===name)\n            setMatch(filtered_match)\n        }\n        else{\n    if(Object.keys(data_list).length!=0){\n        let filtered_match =data_list['data_list']['features']\n        setMatch(filtered_match)\n    }\n}\n   \n    },[data_list,name]) \n    \n    useEffect(()=>{\n        setTabular(<table style={{width:'100%',position:'relative',top:'38px'}}className='table table-striped'>    \n        <thead className='thead-dark'>\n            <tr>\n                <th>Locality Name</th>\n                <th>Block Name</th>\n                <th>Census 2008 </th>\n                <th>Census Estimation 2018</th>\n                <th>Census Estimation 2020</th>\n            </tr>\n        </thead>\n        <tbody>\n            {match.map((block,index)=>   \n            <tr key={index}>\n                <td style={{fontFamily:'Cairo'}}>{block.properties.au_name}</td>\n                <td style={{fontFamily:'Cairo'}}>{block.properties.pau_name}</td>\n                <td style={{textAlign:'center',fontFamily:'Open Sans',fontSize:'19px'}}>{isNaN(parseInt(block.properties.census))?'No Data':parseInt(block.properties.census)}</td>\n                <td style={{textAlign:'center',fontFamily:'Open Sans',fontSize:'19px'}}>{isNaN(parseInt(block.properties.es1))?'No Data':parseInt(block.properties.es1)}</td>\n                <td style={{textAlign:'center',fontFamily:'Open Sans',fontSize:'19px'}}>{isNaN(parseInt(block.properties.es2))?'No Data':parseInt(block.properties.es2)}</td>\n            </tr>)\n\n            }\n        </tbody>\n    </table>)\n\n    },[match])\n\n    \n    return(\n            <div className='' style={{marginTop:'100px'}}>\n                {tabular}\n            </div>\n    )\n}","// this action is about adding coordinates when a user clicks on the map, it is used to\n// compute the shortest path... \nimport {ClosestFacilityComputer} from '../../types'\n\nexport const changeCoords=(coordsOb)=>dispatch=>{\n    dispatch(\n        {\n        type:ClosestFacilityComputer,\n        payload:coordsOb\n    }   )\n    \n}","import React, { Component, Fragment } from 'react'\r\n// import leaflet-react component \r\nimport {Map,TileLayer,Marker,Popup,Circle,GeoJSON,Layer} from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport L from 'leaflet'\r\n// import from styled components\r\nimport {MapContainer,LeafMapContainer} from './styles/style'\r\n// import sidebar \r\nimport Sidebar from '../Sidebar/Sidebar/index'\r\n// import togglers, Map/Data/Search \r\nimport TogglersContainer from '../Togglers/TogglersContainer/index'\r\n// import Geojson which holds the actual Public adminstration units \r\nimport GeoJSON_ from './MapComponents/Geojson'\r\n// import conntect for redux states\r\nimport {connect} from 'react-redux'\r\n// import data view \r\nimport Tabular from '../DataView/Table/index'\r\n// import latlng action to handle clicking maps latlng. \r\nimport {changeCoords} from \"../../Actions/ActionsCreators/ColsestFacilityComputer/changeCoords\";\r\n\r\n\r\nclass index extends Component {\r\n    constructor(props){\r\n            super(props);\r\n            this.state={\r\n                // set the initial location and zoom level \r\n                lat:15.570498544455713,\r\n                long:32.532881032138349,\r\n                zoom:15,\r\n                view:'Map',\r\n                // set the tile,it comes from redux(mapStateToProps), and changes as the user clicks\r\n                tile:this.props.tile,\r\n                // getting a response from the server \r\n                shortest_line:{},\r\n                shortest_line_json_key:2, \r\n            }\r\n            this.mapInstance = React.createRef()\r\n            this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.map = this.mapInstance.current.leafletElement; \r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps!=this.props){\r\n           //console.log('Map object:previous props',prevProps)\r\n            this.setState({view:this.props.view,\r\n            tile:this.props.tile,\r\n            })\r\n        }\r\n        if(prevProps.MatchedItem!=this.props.MatchedItem){\r\n            let [Fly1,Fly2] = this.props.MatchedItem.geometry.coordinates[0][0][0];\r\n            // check if the view is a map view or data view. \r\n            if(this.state.view=='Map'){this.map.flyTo([Fly2,Fly1],15);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleClick(e){\r\n        // this is a props coming from redux \r\n        this.props.changeCoords(e.latlng)\r\n        let key = this.state.shortest_line_json_key;\r\n        key++; \r\n        // making a post request \r\n        fetch('http://localhost:8000/state/closest_healthcare/',{\r\n            method:'POST',\r\n            mode:'cors',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify(this.props.getMapCoords.coords)\r\n        }).then(res=>res.json()).then(data=>{this.setState({shortest_line:data,shortest_line_json_key:key})})\r\n        \r\n        // on subsequent clicks, the original state shortest line should change \r\n    \r\n    }\r\n    render() {\r\n        L.Icon.Default.imagePath='img/'; \r\n        const position = [this.state.lat,this.state.long];   // initial position \r\n        let view = this.state.view;  // map or data view \r\n        if(view=='Map'){\r\n            // setting up the blocks and shortest line \r\n            let Blocks=<></>\r\n            let shortest_line=<></>\r\n            // filling up Blocks with geometry\r\n            if(this.props.jsonSwitcher!='off'){\r\n                Blocks= <GeoJSON_/> \r\n            }\r\n            // filling up shortest line with geometry \r\n            else if(Object.keys(this.state.shortest_line).length!=0){\r\n                shortest_line= <GeoJSON data={this.state.shortest_line} key={this.state.shortest_line_json_key}/>\r\n            }   \r\n        return (\r\n            <div>\r\n                <MapContainer> {/*Map container holds both map and sidebar*/}\r\n                    <Sidebar></Sidebar>\r\n                    <LeafMapContainer> {/* this is the actual map */}\r\n                        <Map center={position} zoom={this.state.zoom} style={{width:'100%',height:'100%'}} ref={this.mapInstance} onclick={this.handleClick}>\r\n                            <TileLayer url={this.state.tile}/>\r\n                            {Blocks}\r\n                            {shortest_line}\r\n                        </Map>\r\n                    </LeafMapContainer>\r\n                    <TogglersContainer/>\r\n                </MapContainer>\r\n            </div>\r\n        )\r\n    }\r\n        else{ // tabular data \r\n            return(\r\n                <div style={{height:'100vh'}}>\r\n                    <TogglersContainer/>\r\n                    <Tabular></Tabular>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>({\r\n    view:state.ToggleView.View,  // the view either to be map or tabular\r\n    tile:state.ChangeTile.Tile,  // the tile changes dynamically as the user clicks  \r\n    MatchedItem:state.SearchReducer.MatchedItem,  // this is the item to be passed to geojson.\r\n    getMapCoords:state.ClosestFacilityReducer.coords,     // this is the coords.  \r\n    jsonSwitcher:state.ClosetHealthCareRemoveJson.switcher, // switch json off and on to let a room for the user to click. \r\n\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,{changeCoords})(index); ","import {FillColorChange,OutlineColorChange} from '../Actions/types'\n\nconst State = {fillColor:'blue',OutlineColor:'none'};\n\nexport default function LayerColorReducer(state=State,action){\n    switch(action.type){\n        case FillColorChange:return{\n            ...state,\n            fillColor:action.payload\n        }\n        case OutlineColorChange:return{\n            ...state,\n            OutlineColor:action.payload\n        }\n        default:return(state)\n    }\n}","import {ToggleMapView,ToggleDataView} from '../Actions/types'\n\nconst State = {View:'Map'};\n\nexport default function  ToggleViewReducer(state=State,action){\n    switch(action.type){\n        case ToggleMapView:return{\n            ...state, \n            View:action.payload\n        }\n        case ToggleDataView:return{\n            ...state,\n            View:action.payload\n        }\n        default:return {...state}\n    }\n}","import {ChangeTile} from '../Actions/types'\n\nconst State = {Tile:'https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png'};\n\nexport default function LayerColorReducer(state=State,action){\n    switch(action.type){\n        case ChangeTile:return{\n            ...state,\n            Tile:action.payload\n        }\n        default:return(state)\n    }\n}","import {SearchItemClicked} from '../Actions/types'\nimport {SearchTableItem} from '../Actions/types'\n\nconst State = {MatchedItem:[],Name:''};\n\nexport default function LayerColorReducer(state=State,action){\n    switch(action.type){\n        case SearchItemClicked:console.log('Search Reducer:',action.payload);return{\n            ...state,\n        MatchedItem:action.payload\n        }\n        case SearchTableItem:return{...state,Name:action.payload};\n\n        default:return(state)\n    }\n}","import {ClosestFacilityComputer} from '../Actions/types'\nimport {ClosestFacilityComputerRemoveJson} from '../Actions/types'\n\nlet State={\n    // the coords got from the map and sent to the server to compute \n    coords:{},   \n    switcher:'off',\n} \n\nexport default function ClosestFacilityReducer(state=State,action){\n    switch(action.type){\n        case ClosestFacilityComputer:return{\n            ...state,\n            coords:{...state.coords,coords:action.payload}\n        }\n        case ClosestFacilityComputerRemoveJson:return{\n            ...state,\n            switcher:action.payload\n        }\n\n        default:return{state}\n    }\n}\n","import {combineReducers} from 'redux';\nimport LayerColorsReducers from './LayerColorsReducer';\nimport ToggleView from \"./TogglersReducer\";\nimport TileReducer from './TileReducer'\nimport SearchReducer from './SearchReducer'\nimport ClosestFacilityReducer from \"./ClosestHealthCare\";\nimport RemoveJson from './ClosestHealthCare'\n\nexport default combineReducers({\n    LayerColors: LayerColorsReducers,\n    ToggleView:ToggleView,\n    ChangeTile:TileReducer,\n    SearchReducer:SearchReducer,\n    ClosestFacilityReducer,\n    ClosetHealthCareRemoveJson:RemoveJson,\n})\n","import {createStore,applyMiddleware} from 'redux';\r\nimport rootReducer from './Reducers';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer,initialState,composeWithDevTools(applyMiddleware(...middleware))); \r\nexport default store; \r\n","import React ,{Component}from 'react';\nimport './App.css';\nimport Map from './Components/Map/index'\nimport store from './store'\nimport {Provider} from 'react-redux'\nimport './bootstrap.min.css'\nclass App extends Component {\n  componentWillMount(){\n    document.title = \"Khartoum state vulnerability map\"\n  }\n  render(){\n    return(\n      <Provider store={store}>\n      <div>\n        <Map/>\n      </div>\n      </Provider>\n    )}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>,document.getElementById(\"root\"));\nserviceWorker.register();\n"],"sourceRoot":""}